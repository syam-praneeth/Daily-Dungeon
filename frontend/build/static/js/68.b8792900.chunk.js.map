{"version":3,"file":"static/js/68.b8792900.chunk.js","mappings":"mNAGe,SAASA,EAASC,GAO7B,IAP8B,KAChCC,EAAO,GAAE,MACTC,EAAQ,IAAG,OACXC,EAAS,GAAE,OACXC,EAAS,UAAS,KAClBC,EAAO,wBAAuB,YAC9BC,EAAc,GACfN,EACC,MAAM,KAAEO,EAAI,KAAEC,IAASC,EAAAA,EAAAA,SAAQ,KAC7B,IAAKR,GAAwB,IAAhBA,EAAKS,OAAc,MAAO,CAAEH,KAAM,GAAIC,KAAM,IACzD,MAAMG,EAAIV,EAAKS,OACTE,EAAMC,KAAKD,IAAI,KAAMX,GACrBa,EAAMD,KAAKC,IAAI,KAAMb,GACrBc,EAAOF,KAAKD,IAAI,EAAGA,EAAME,GACzBE,EAAKL,EAAI,EAAIT,GAASS,EAAI,GAAK,EAC/BM,EAAShB,EAAKiB,IAAI,CAACC,EAAGC,IAGnB,CAFGA,EAAIJ,EACJb,GAAWgB,EAAIL,GAAOC,EAAQZ,IAY1C,MAAO,CAAEI,KATCU,EACPC,IAAI,CAAAG,EAASD,KAAC,IAARE,EAAGC,GAAEF,EAAA,OAAe,IAAND,EAAO,KAAAI,OAAQF,EAAC,KAAAE,OAAID,GAAC,KAAAC,OAAUF,EAAC,KAAAE,OAAID,KACxDE,KAAK,KAOUjB,KANR,CAAC,OAADgB,OACDrB,MACJc,EAAOC,IAAI,CAAAQ,EAASN,KAAC,IAARE,EAAGC,GAAEG,EAAA,MAAgB,KAAAF,OAAQF,EAAC,KAAAE,OAAID,KAAsB,KAADC,OAClEtB,EAAK,KAAAsB,OAAIrB,GACd,KACAsB,KAAK,OAEN,CAACxB,EAAMC,EAAOC,IAEjB,OACEwB,EAAAA,EAAAA,MAAA,OAAKzB,MAAOA,EAAOC,OAAQA,EAAQyB,QAAO,OAAAJ,OAAStB,EAAK,KAAAsB,OAAIrB,GAAS0B,SAAA,CAClErB,GAAOsB,EAAAA,EAAAA,KAAA,QAAMC,EAAGvB,EAAMH,KAAMA,EAAMD,OAAO,SAAY,KACrDG,GACCuB,EAAAA,EAAAA,KAAA,QACEC,EAAGxB,EACHF,KAAK,OACLD,OAAQA,EACRE,YAAaA,EACb0B,cAAc,QACdC,eAAe,UAEf,OAGV,CC/Ce,SAASC,EAAQlC,GAS5B,IAT6B,OAC/BmC,EAAS,GAAE,OACXC,EAAS,GAAE,MACXlC,EAAQ,IAAG,OACXC,EAAS,IAAG,OACZkC,EAAS,EAAC,MACVC,EAAQ,UAAS,SACjBC,GAAW,EAAK,SAChBC,GACDxC,EACC,MAAM,KAAEyC,EAAI,QAAEC,IAAYjC,EAAAA,EAAAA,SAAQ,KAChC,MAAME,EAAIwB,EAAOzB,OACjB,IAAKC,EAAG,MAAO,CAAE8B,KAAM,GAAIC,QAAS,IACpC,MAAM9B,EAAc,OAAR4B,QAAQ,IAARA,EAAAA,EAAY3B,KAAKD,IAAI,KAAMuB,GACjCQ,EAAW9B,KAAKD,IAAI,EAAGC,KAAK+B,OAAO1C,GAASS,EAAI,GAAK0B,GAAU1B,IACrE,IAAIW,EAAI,EAQR,MAAO,CAAEmB,KAPEN,EAAOjB,IAAKC,IACrB,MAAM0B,EAAIhC,KAAKiC,MAAOjC,KAAKD,IAAI,EAAGO,GAAKP,GAAQT,EAAS,IAClD4C,EAAM,CAAEzB,IAAGC,EAAGpB,EAAS0C,EAAGG,EAAGL,EAAUE,KAE7C,OADAvB,GAAKqB,EAAWN,EACTU,IAGUL,QADRN,GAAUA,EAAO1B,SAAWC,EAAIyB,EAASa,MAAMtC,GAAGN,KAAK,MAEjE,CAAC8B,EAAQC,EAAQlC,EAAOC,EAAQkC,EAAQG,IAE3C,OACEb,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKzB,MAAOA,EAAOC,OAAQA,EAAQyB,QAAO,OAAAJ,OAAStB,EAAK,KAAAsB,OAAIrB,GAAS0B,SAAA,CAClEU,GACCZ,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,QACEoB,GAAI,EACJC,GAAIhD,EAAS,EACbiD,GAAIlD,EACJmD,GAAIlD,EAAS,EACbC,OAAO,aAET0B,EAAAA,EAAAA,KAAA,QAAMoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAIlD,EAAQC,OAAO,eAE9C,KACHqC,EAAKvB,IAAI,CAACoC,EAAGlC,KACZU,EAAAA,EAAAA,KAAA,QAEER,EAAGgC,EAAEhC,EACLC,EAAG+B,EAAE/B,EACLrB,MAAOoD,EAAEN,EACT7C,OAAQmD,EAAET,EACVU,GAAI,EACJlD,KAAMiC,EACNkB,QAAS,IAPJpC,OAWVsB,EAAQe,KAAKC,UACZ5B,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEC,QAAS,OAAQC,IAAKxB,EAAQyB,UAAW,GAAIjC,SACxDa,EAAQxB,IAAI,CAAC6C,EAAG3C,KACfU,EAAAA,EAAAA,KAAA,OAEE6B,MAAO,CACLzD,MAAM,GAADsB,OAAKX,KAAKD,IACb,EACAC,KAAK+B,OACF1C,GAASwC,EAAQhC,OAAS,GAAK2B,GAAUK,EAAQhC,SAErD,MACDsD,UAAW,SACXC,SAAU,GACV3B,MAAO,WACPT,SAEDkC,GAbI3C,MAiBT,OAGV,C,aC7EO,MAAM8C,EAAe,CAC1BC,SAAU,CAAEC,KAAM,WAAYC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAClEC,SAAU,CAAEJ,KAAM,WAAYC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAClEE,WAAY,CAAEL,KAAM,aAAcC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MACtEG,gBAAiB,CACfN,KAAM,kBACNC,GAAI,UACJC,GAAI,UACJC,KAAM,MAERI,aAAc,CACZP,KAAM,gBACNC,GAAI,UACJC,GAAI,UACJC,KAAM,MAERK,SAAU,CAAER,KAAM,WAAYC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAClEM,OAAQ,CAAET,KAAM,SAAUC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAC9DO,QAAS,CAAEV,KAAM,UAAWC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAChEQ,QAAS,CAAEX,KAAM,UAAWC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAChES,SAAU,CAAEZ,KAAM,WAAYC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAClEU,QAAS,CAAEb,KAAM,UAAWC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAChEW,MAAO,CAAEd,KAAM,QAASC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAC5DY,QAAS,CAAEf,KAAM,UAAWC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAChEa,KAAM,CAAEhB,KAAM,OAAQC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MAC1Dc,WAAY,CAAEjB,KAAM,aAAcC,GAAI,UAAWC,GAAI,UAAWC,KAAM,MACtEe,aAAc,CACZlB,KAAM,eACNC,GAAI,UACJC,GAAI,UACJC,KAAM,OAqCV,QAjCO,SAAqBvE,GAAkD,IAADuF,EAAA,IAAhD,QAAEC,EAAO,KAAEC,EAAO,GAAE,OAAEC,EAAS,GAAE,UAAEC,GAAW3F,EACzE,MAAM4F,EAAO1B,EAAasB,IAAY,CACpCpB,KAAMoB,EACNnB,GAAI,UACJC,GAAI,UACJC,MAAa,OAAPiB,QAAO,IAAPA,GAAoB,QAAbD,EAAPC,EAASK,MAAM,EAAG,UAAE,IAAAN,OAAb,EAAPA,EAAsBO,gBAAiB,KAE/C,OACEnE,EAAAA,EAAAA,MAAA,OACEzB,MAAOuF,EACPtF,OAAQsF,EACR7D,QAAO,OAAAJ,OAASiE,EAAI,KAAAjE,OAAIiE,GACxBM,KAAK,MACL,aAAYJ,GAAaC,EAAKxB,KAC9BT,MAAO,CAAEC,QAAS,SAAU/B,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,QAAMR,EAAE,IAAIC,EAAE,IAAIrB,MAAOuF,EAAMtF,OAAQsF,EAAMlC,GAAImC,EAAQrF,KAAMuF,EAAKtB,MACpExC,EAAAA,EAAAA,KAAA,QACER,EAAE,MACFC,EAAE,MACFyE,iBAAiB,SACjBC,WAAW,SACXC,WAAW,MACXC,WAAW,uFACXlC,SAAUpD,KAAKiC,MAAa,IAAP2C,GACrBpF,KAAMuF,EAAKvB,GAAGxC,SAEb+D,EAAKrB,SAId,EClEM6B,EAAQ,CACZ,WACA,WACA,aACA,kBACA,eACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,UACA,OACA,aACA,gBAGa,SAASC,EAASrG,GAA2C,IAA1C,MAAEsG,EAAQ,CAAC,EAAC,OAAEC,EAAM,QAAEC,GAAU,GAAOxG,EACvE,MAAMyG,EAAYL,EAAMM,OAAQC,GAAMzC,EAAayC,KAC5CC,EAAQC,GAAaC,EAAAA,SAAe,KACzC,IACE,MAAMC,EAAMC,aAAaC,QAAQ,mBAC3BC,EAAMH,EAAMI,KAAKC,MAAML,GAAO,GACpC,OAAO9D,MAAMoE,QAAQH,GAAOA,EAAM,EACpC,CAAE,MAAOI,GACP,MAAO,EACT,KAEKC,EAAWC,GAAgBV,EAAAA,SAAe,MAE3CW,EAAmBb,EAAOF,OAAQC,GAAMF,EAAUiB,SAASf,IAC3DgB,EAAc,IACfF,KACAhB,EAAUC,OAAQC,IAAOc,EAAiBC,SAASf,KAGlDiB,EAAcV,IAClBL,EAAUK,GACV,IACEF,aAAaa,QAAQ,kBAAmBV,KAAKW,UAAUZ,GACzD,CAAE,MAAAa,GAAO,GASLC,EAAYC,GAAQrB,EAAOc,SAASO,GAGpCC,EAAYC,IAChB,MAAMtF,EAAIsF,EAAIC,QAAQ,IAAK,IACrBjH,EACS,IAAb0B,EAAEnC,OACEmC,EACGwF,MAAM,IACNnH,IAAKoH,GAAMA,EAAIA,GACf7G,KAAK,IACRoB,EACA0F,EAAMC,SAASrH,EAAG,IACxB,MAAO,CAAEsH,EAAIF,GAAO,GAAM,IAAKG,EAAIH,GAAO,EAAK,IAAKjF,EAAS,IAANiF,IAUnDI,EAAMA,CAACC,EAAIC,EAAIC,KACnB,MAAMC,EAAIb,EAASU,GACbtF,EAAI4E,EAASW,GACnB,MAXexH,KAAA,IAAC,EAAEoH,EAAC,EAAEC,EAAC,EAAEpF,GAAGjC,EAAA,UAAAG,OACvB,CAACiH,EAAGC,EAAGpF,GACRpC,IAAKP,IACJ,MACMqI,EADInI,KAAKD,IAAI,EAAGC,KAAKC,IAAI,IAAKD,KAAKiC,MAAMnC,KACnCsI,SAAS,IACrB,OAAoB,IAAbD,EAAEtI,OAAe,IAAMsI,EAAIA,IAEnCvH,KAAK,MAIDyH,CAAS,CACdT,EAAGM,EAAEN,GAAKnF,EAAEmF,EAAIM,EAAEN,GAAKK,EACvBJ,EAAGK,EAAEL,GAAKpF,EAAEoF,EAAIK,EAAEL,GAAKI,EACvBxF,EAAGyF,EAAEzF,GAAKA,EAAEA,EAAIyF,EAAEzF,GAAKwF,KAGrBK,EAAOA,CAAChB,EAAKY,KACjB,MAAM,EAAEN,EAAC,EAAEC,EAAC,EAAEpF,GAAM4E,EAASC,GAC7B,MAAM,QAAN3G,OAAeiH,EAAC,MAAAjH,OAAKkH,EAAC,MAAAlH,OAAK8B,EAAC,MAAA9B,OAAKuH,EAAC,MAapC,OACEpH,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,moEAoBAC,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,aAAarD,KAAK,OAAMlE,SACpC2E,EACGvD,MAAMoG,KAAK,CAAE3I,OAAQ+F,EAAU/F,QAAU,IAAKQ,IAAI,CAACoI,EAAGlI,KACpDU,EAAAA,EAAAA,KAAA,OAAasH,UAAU,YAAbhI,IAEZuG,EAAYzG,IAAK+G,IACf,MAAMrC,EAAO1B,EAAa+D,GACpBsB,EAAMjD,EAAM2B,IAAQ,GACpBuB,IAAQD,EACRE,GA1CIC,EA0CkB9D,EAAKtB,GAlCpC,CAAEqF,IANGhB,EAAI,UAAWe,EAAO,KAMpBE,OALCjB,EAAI,UAAWe,EAAO,KAKfG,OAJPlB,EAAIe,EAAO,UAAW,KAIPI,OAHfnB,EAAI,UAAWe,EAAO,IAGCK,QAFtBpB,EAAI,UAAWe,EAAO,KAESM,WAD5BrB,EAAI,UAAWe,EAAO,OAPrBA,MA4CE,UAARzB,IACFwB,EAAOI,OAAS,UAChBJ,EAAOK,OAAS,WAGlB,MAcMG,EAAOA,KACPT,GAAKU,OAAOD,KAAKV,EAAK,SAAU,eAEtC,OACE5H,EAAAA,EAAAA,MAAA,OAEEyH,UAAU,iBACVzF,MAAO,CACLwG,WAAW,2BAAD3I,OAA6BiI,EAAOE,IAAG,MAAAnI,OAAKiI,EAAOG,OAAM,KACnEQ,YAAqB,UAARnC,EAAkB,OAASwB,EAAOI,QAEjD9D,KAAK,WACL,gBAAAvE,OAAeoE,EAAKxB,KAAI,eAAA5C,OACtBgI,EAAM,eAAiB,qBAEzBa,SAAU,EACVC,QAASL,EACTM,UAAYjD,IACK,UAAVA,EAAEW,KAA6B,MAAVX,EAAEW,MAAgBuB,IAC1ClC,EAAEkD,iBACFP,MAEFpI,SAAA,EAGFC,EAAAA,EAAAA,KAAA,UACEwI,QAAUhD,IACRA,EAAEmD,kBArIHxC,KACbrB,EAAOc,SAASO,GAClBL,EAAWhB,EAAOF,OAAQC,GAAMA,IAAMsB,IAEtCL,EAAW,IAAIhB,EAAQqB,KAkIPyC,CAAUzC,IAEZ,aACED,EAASC,GAAI,SAAAzG,OAAYoE,EAAKxB,MAAI,OAAA5C,OAAYoE,EAAKxB,MAErDuG,MAAO3C,EAASC,GAAO,QAAU,MACjCtE,MAAO,CACLiH,SAAU,WACVjB,IAAK,GACLkB,MAAO,GACP3K,MAAO,GACPC,OAAQ,GACRyD,QAAS,OACTkH,WAAY,SACZC,eAAgB,SAChBC,aAAc,IACdb,WAAYhB,EAAKM,EAAOE,IAAK,KAC7BE,OAAO,aAADrI,OAAe2H,EAAKM,EAAOI,OAAQ,KACzCvH,MAAOmH,EAAOK,OACdmB,OAAQ,EACRC,OAAQ,UACRC,WAAY,EACZC,UAAU,aAAD5J,OAAe2H,EAAKM,EAAOI,OAAQ,OAC5ChI,UAEFC,EAAAA,EAAAA,KAAA,OACE6B,MAAO,CAAEC,QAAS,SAClB1D,MAAM,KACNC,OAAO,KACPyB,QAAQ,YACRyJ,oBAAoB,gBACpBhL,KAAM2H,EAASC,GAAOwB,EAAOK,OAAS,OACtC1J,OAAQqJ,EAAOK,OACfxJ,YAAY,MACZ0B,cAAc,QACdC,eAAe,QACf,iBAAWJ,UAEXC,EAAAA,EAAAA,KAAA,QAAMC,EAAE,mGAIZJ,EAAAA,EAAAA,MAAA,OACE,iBACAgC,MAAO,CACLiH,SAAU,WACVU,MAAO,EACPC,cAAe,QACf1J,SAAA,EAGFC,EAAAA,EAAAA,KAAA,OACE6B,MAAO,CACLiH,SAAU,WACVjB,KAAM,GACN6B,MAAO,GACPtL,MAAO,IACPC,OAAQ,IACRgK,WAAW,iCAAD3I,OAAmC2H,EAC3CM,EAAOK,OACP,KACD,sBACDpD,OAAQ,gBAIZ5E,EAAAA,EAAAA,KAAA,OACE6B,MAAO,CACLiH,SAAU,WACVhB,QAAS,GACTiB,OAAQ,GACR3K,MAAO,IACPC,OAAQ,IACRgK,WAAW,iCAAD3I,OAAmC2H,EAC3CM,EAAOM,QACP,KACD,sBACDrD,OAAQ,iBAIZ5E,EAAAA,EAAAA,KAAA,OACE6B,MAAO,CACLiH,SAAU,WACVjB,KAAM,GACNkB,OAAQ,GACR3K,MAAO,IACPC,OAAQ,IACR6K,aAAc,MACdnB,OAAO,cAADrI,OAAgB2H,EAAKM,EAAOI,OAAQ,MAC1C4B,gBAAiB,cACjBC,kBAAmB,cACnBC,UAAW,gBACXnI,QAAS,UAIf7B,EAAAA,EAAAA,MAAA,OAAKyH,UAAU,YAAWvH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OACEsH,UAAU,YACVzF,MAAO,CACLwG,WAAW,2BAAD3I,OAA6BiI,EAAOM,QAAO,MAAAvI,OAAKiI,EAAOO,WAAU,KAC3EI,YAAaX,EAAOI,QACpBhI,UAEFC,EAAAA,EAAAA,KAAC8J,EAAY,CACXpG,QAASyC,EACTtC,UAAS,GAAAnE,OAAKoE,EAAKxB,KAAI,SACvBqB,KAAM,QAGV9D,EAAAA,EAAAA,MAAA,OAAKyH,UAAU,UAASvH,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAKyH,UAAU,YAAWvH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIsH,UAAU,aAAYvH,SAAE+D,EAAKxB,OAChCoF,GACC1H,EAAAA,EAAAA,KAAA,OACEsH,UAAU,WACV,gBAAA5H,OAAeoE,EAAKxB,KAAI,SAAQvC,SA/J7BgK,KACf,IAAKA,EAAG,MAAO,GACf,IAEE,OADe,IAAIC,IAAID,GACTE,SAAS3D,QAAQ,SAAU,GAC3C,CAAE,MAAA4D,GACA,IAEE,OADe,IAAIF,IAAI,WAAaD,GACtBE,SAAS3D,QAAQ,SAAU,GAC3C,CAAE,MAAA6D,GACA,MAAO,EACT,CACF,GAqJaC,CAAQ3C,KAET,MACJzH,EAAAA,EAAAA,KAAA,QACEsH,UAAU,OACVzF,MAAO,CACLwG,WAAYX,EACRb,EAAIc,EAAOE,IAAKF,EAAOK,OAAQ,KAC/B,UACJxH,MAAOkH,EAAM,UAAY,UACzBY,YAAaZ,EAAMC,EAAOI,OAAS,WACnChI,SAED2H,EAAM,YAAc,uBAGzB7H,EAAAA,EAAAA,MAAA,OAAKyH,UAAU,UAASvH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,UACEsH,UAAU,MACVzF,MAAO,CACLwG,WAAYX,EACRb,EAAIc,EAAOE,IAAKF,EAAOK,OAAQ,KAC/B,UACJxH,MAAOkH,EAAM,UAAY,UACzBY,YAAaZ,EAAMC,EAAOI,OAAS,WAErCS,QAAUhD,IACRA,EAAEmD,kBACEjB,GAAKS,KAEXkC,UAAW3C,EACX,aACEA,EAAG,SAAAhI,OACUoE,EAAKxB,MAAI,GAAA5C,OACfoE,EAAKxB,KAAI,mBACjBvC,SACF,UAGA2H,GACC1H,EAAAA,EAAAA,KAAA,UACEsH,UAAU,MACVzF,MAAO,CACLwG,WAAYxB,EAAIc,EAAOE,IAAKF,EAAOK,OAAQ,KAC3CxH,MAAO,UACP8H,YAAaX,EAAOI,QAEtBS,QAAUhD,IACRA,EAAEmD,kBACa2B,WACb,IACE,GACEC,UAAUC,WACVD,UAAUC,UAAUC,gBAEdF,UAAUC,UAAUC,UAAUhD,OAC/B,CACL,MAAMiD,EACJC,SAASC,cAAc,YACzBF,EAAGG,MAAQpD,EACXkD,SAASG,KAAKC,YAAYL,GAC1BA,EAAGM,SACHL,SAASM,YAAY,QACrBN,SAASG,KAAKI,YAAYR,EAC5B,CACAhF,EAAaS,GACbgF,WAAW,IAAMzF,EAAa,MAAO,KACvC,CAAE,MAAA0F,GAAO,GAEXC,IAEF,qBAAA3L,OAAoBoE,EAAKxB,KAAI,SAAQvC,SAEpC0F,IAAcU,EAAM,SAAW,SAEhC,MACJnG,EAAAA,EAAAA,KAAA,UACEsH,UAAU,MACVzF,MAAO,CACLrB,MAAe,UAAR2F,EAAkB,OAASwB,EAAOK,OACzCM,YACU,UAARnC,EAAkB,OAASwB,EAAOI,OACpCM,WAAY,eAEdG,QAAUhD,IACRA,EAAEmD,kBACI,OAANlE,QAAM,IAANA,GAAAA,KAEF,qBAAA/E,OAAoBoE,EAAKxB,KAAI,SAAQvC,SACtC,yBAvOFoG,SAmPvB,CC/YA,MAAMmF,EAAS,CACb,CAAEnF,IAAK,WAAYoF,MAAO,YAC1B,CAAEpF,IAAK,WAAYoF,MAAO,YAC1B,CAAEpF,IAAK,aAAcoF,MAAO,cAC5B,CAAEpF,IAAK,aAAcoF,MAAO,cAC5B,CAAEpF,IAAK,OAAQoF,MAAO,QACtB,CAAEpF,IAAK,eAAgBoF,MAAO,gBAC9B,CAAEpF,IAAK,UAAWoF,MAAO,WACzB,CAAEpF,IAAK,kBAAmBoF,MAAO,mBACjC,CAAEpF,IAAK,eAAgBoF,MAAO,iBAC9B,CAAEpF,IAAK,WAAYoF,MAAO,YAC1B,CAAEpF,IAAK,SAAUoF,MAAO,UACxB,CAAEpF,IAAK,UAAWoF,MAAO,WACzB,CAAEpF,IAAK,UAAWoF,MAAO,WACzB,CAAEpF,IAAK,WAAYoF,MAAO,YAC1B,CAAEpF,IAAK,UAAWoF,MAAO,WACzB,CAAEpF,IAAK,QAASoF,MAAO,UAGV,SAASC,EAAUtN,GAAsC,IAArC,KAAEiK,EAAI,QAAEsD,EAAO,QAAEC,EAAO,OAAEC,GAAQzN,EACnE,MAAOmC,EAAQuL,IAAaC,EAAAA,EAAAA,UAAS,CAAC,IAC/BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,CAAC,GAOtC,IALAG,EAAAA,EAAAA,WAAU,KACRJ,EAAUH,GAAW,CAAC,GACtBM,EAAU,CAAC,IACV,CAACN,EAAStD,KAERA,EAAM,OAAO,KAalB,OACEnI,EAAAA,EAAAA,KAAA,OACEiE,KAAK,SACL,aAAW,OACXqD,UAAU,iBACVmB,UAAYjD,GAAgB,WAAVA,EAAEW,KAAoBuF,IAAU3L,UAElDF,EAAAA,EAAAA,MAAA,OAAKyH,UAAU,QAAQzF,MAAO,CAAEoK,UAAW,OAAQC,SAAU,QAASnM,SAAA,EACpEC,EAAAA,EAAAA,KAAA,MAAI6B,MAAO,CAAEG,UAAW,GAAIjC,SAAC,gBAC7BC,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,OAAOzF,MAAO,CAAEE,IAAK,IAAKhC,SACtCuL,EAAOlM,IAAK+M,IACXtM,EAAAA,EAAAA,MAAA,SAAmBgC,MAAO,CAAEC,QAAS,OAAQC,IAAK,GAAIhC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,QAAM6B,MAAO,CAAEM,SAAU,IAAKpC,SAAEoM,EAAEZ,SAClCvL,EAAAA,EAAAA,KAAA,SACE,aAAYmM,EAAEZ,MACda,YAAW,gBAAA1M,OAAkByM,EAAEZ,MAAK,KACpCV,MAAOxK,EAAO8L,EAAEhG,MAAQ,GACxBkG,SAAW7G,GACToG,GAASU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIjM,GAAM,IAAE,CAAC8L,EAAEhG,KAAMX,EAAE+G,OAAO1B,WAG5CiB,EAAOK,EAAEhG,OACRnG,EAAAA,EAAAA,KAAA,QAAMiE,KAAK,QAAQpC,MAAO,CAAErB,MAAO,UAAW2B,SAAU,IAAKpC,SAC1D+L,EAAOK,EAAEhG,SAZJgG,EAAEhG,SAkBlBtG,EAAAA,EAAAA,MAAA,OACEgC,MAAO,CACLC,QAAS,OACTmH,eAAgB,WAChBlH,IAAK,EACLC,UAAW,IACXjC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQsH,UAAU,SAASkB,QAASkD,EAAQ3L,SAAC,YAG7CC,EAAAA,EAAAA,KAAA,UACEsH,UAAU,iBACVkB,QAASA,KArDFgE,MACf,MAAMC,EAAO,CAAC,EACd,IAAK,MAAMN,KAAKb,EAAQ,CACtB,MAAMjM,GAAKgB,EAAO8L,EAAEhG,MAAQ,IAAIuG,OAE5BrN,GAAK,WAAWsN,KAAKtN,KAAIoN,EAAKN,EAAEhG,KAAO,8BAC7C,CAEA,OADA4F,EAAUU,GAC0B,IAA7BG,OAAOC,KAAKJ,GAAM7N,QA8CV4N,IACLb,EAAOtL,IACPN,SACH,gBAOX,CC9Fe,SAAS+M,EAAK5O,GAA+C,IAA9C,KAAEiK,EAAI,QAAE4E,EAAO,QAAErB,EAAO,SAAEsB,EAAW,MAAM9O,EAOvE,OANA8N,EAAAA,EAAAA,WAAU,KACR,IAAK7D,EAAM,OACX,MAAM8E,EAAK9B,WAAW,IAAa,OAAPO,QAAO,IAAPA,OAAO,EAAPA,IAAasB,GACzC,MAAO,IAAME,aAAaD,IACzB,CAAC9E,EAAM6E,EAAUtB,IAEfvD,GAGHnI,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEiH,SAAU,QAASjB,IAAK,GAAIkB,MAAO,GAAII,OAAQ,IAAKpJ,UAChEC,EAAAA,EAAAA,KAAA,OACEiE,KAAK,SACL,YAAU,SACVpC,MAAO,CACLwG,WAAY,UACZ7H,MAAO,UACPuH,OAAQ,oBACRmB,aAAc,GACdiE,QAAS,YACT7D,UAAW,mCACX8D,SAAU,KACVrN,SAEDgN,MAjBW,IAqBpB,CCnBA,MAuPA,EAvPoBM,KAClB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,YAAWC,EAAAA,IACtB,OAAEC,EAAM,YAAEC,IAAgBH,EAAAA,EAAAA,YAAWI,EAAAA,IACpCC,EAAgBC,IAAqBhC,EAAAA,EAAAA,UAAS,KAC9CiC,EAAMC,IAAWlC,EAAAA,EAAAA,UAAS,CAC/BvJ,MAAU,OAAJgL,QAAI,IAAJA,OAAI,EAAJA,EAAMhL,OAAQ,GACpB0L,OAAW,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,QAAS,MAIjBC,EAAWC,IAAgBrC,EAAAA,EAAAA,WAAS,IACpCsC,EAAIC,IAASvC,EAAAA,EAAAA,UAAS,CAC3BwC,KAAM,SACN7J,MAAO,CAAC,EACR8J,UAAW,CAAC,EACZC,YAAa,CAAEC,gBAAgB,EAAMC,MAAO,QAC5CC,kBAAmB,CAAC,KAGflK,EAAOmK,IAAY9C,EAAAA,EAAAA,UAAS,CAAC,IAC7B+C,EAAWC,IAAgBhD,EAAAA,EAAAA,WAAS,IACpCiD,EAAcC,IAAmBlD,EAAAA,EAAAA,WAAS,IAC1CmD,EAAOC,IAAYpD,EAAAA,EAAAA,UAAS,CAAE1D,MAAM,EAAO+G,IAAK,MAQvDlD,EAAAA,EAAAA,WAAU,KACG,OAAX0B,QAAW,IAAXA,GAAAA,IAEA,MAAMyB,EAAM,IAAIC,KACVC,EAAQ,IAAID,KAClBC,EAAMC,QAAQH,EAAII,UAAY,IAC9B,MAAMC,EAAE,QAAA9P,OAAW+P,mBACjBJ,EAAMK,eACP,QAAAhQ,OAAO+P,mBAAmBN,EAAIO,gBAC/BC,EAAAA,EACGC,IAAI,oBAADlQ,OAAqB8P,IACxBK,KAAMC,GAAQjC,EAAkBiC,EAAI3R,MAAQ,KAC5C4R,MAAM,IAAMlC,EAAkB,MAChC,KAcH7B,EAAAA,EAAAA,WAAU,KAXK1B,WACb,IACE4D,GAAa,GACb,MAAMjH,QAAU0I,EAAAA,EAAMC,IAAI,eAC1BxB,EAAMnH,EAAE9I,MAAQgQ,EAClB,CAAE,MAAO3I,GACP,CACD,QACC0I,GAAa,EACf,GAGA8B,IACC,IAGH,MAAMC,EAAY3F,UAChB,IACEyE,GAAgB,GAChB,MAAMe,QAAYH,EAAAA,EAAMC,IAAI,kBAC5BjB,EAASmB,EAAI3R,MAAQ,CAAC,EACxB,CAAE,MAAA8H,GACA0I,EAAS,CAAC,EACZ,CAAC,QACCI,GAAgB,EAClB,IAEF/C,EAAAA,EAAAA,WAAU,KACRiE,KACC,IAGH,MAAMC,EAAK,eAGLC,GAAQxR,EAAAA,EAAAA,SACZ,KAAM,IAAIyQ,MAAOgB,mBAAmB,QAAS,CAAEC,SAAUH,IACzD,IAEII,GAAY3R,EAAAA,EAAAA,SAAQ,KACxB,MAAMuI,EAAI,IAAIqJ,IAMd,OALC9C,GAAU,IACR7I,OAAQ3E,GAAMA,EAAEuQ,UAChBC,QAASxQ,IACJA,EAAEyQ,MAAMxJ,EAAEyJ,IAXD1Q,IACjB,IAAImP,KAAKnP,GAAGmQ,mBAAmB,QAAS,CAAEC,SAAUH,IAU9BU,CAAU3Q,EAAEyQ,SAE3BxJ,GACN,CAACuG,IAcEoD,EAZahS,KACjB,MAAMiS,EAAM,GACNC,EAAO,IAAI3B,KAAK,GAAD1P,OAAIyQ,EAAK,oBAC9B,IAAK,IAAI7Q,EAAIT,EAAI,EAAGS,GAAK,EAAGA,IAAK,CAC/B,MAAM0R,EAAK,IAAI5B,KAAK2B,GACpBC,EAAG1B,QAAQyB,EAAKxB,UAAYjQ,GAC5BwR,EAAIG,KAAKD,EAAGZ,mBAAmB,QAAS,CAAEC,SAAUH,IACtD,CACA,OAAOY,GAGMI,CAAU,IACD9R,IAAKa,GAAOqQ,EAAU5I,IAAIzH,GAAK,EAAI,GACrDkR,EAAgBN,EAASO,OAAO,CAACnK,EAAGzF,IAAMyF,EAAIzF,EAAG,GAAK,GAGtD6P,GAAQ1S,EAAAA,EAAAA,SAAQ,KACpB,MACMyG,EAAM,GACZ,IAAK,IAAI9F,EAAI,EAAGA,EAAIuR,EAASjS,OAAQU,IAAK,CACxC,MAAM+P,EAAQtQ,KAAKD,IAAI,EAAGQ,EAHhB,EAG0B,GAC9ByE,EAAQ8M,EAAS9M,MAAMsL,EAAO/P,EAAI,GAClCgS,EAAMvN,EAAMqN,OAAO,CAACnK,EAAGzF,IAAMyF,EAAIzF,EAAG,GAAKuC,EAAMnF,OACrDwG,EAAI6L,KAAKM,QAAc,IAAND,GAAWE,QAAQ,IACtC,CACA,OAAOpM,GACN,CAACyL,IAIEY,GAAsB9S,EAAAA,EAAAA,SAAQ,KAClC,MACM+S,EAASvQ,MAAM,GAAG5C,KAAK,GAY7B,OAXAqP,EAAe6C,QAASvJ,IACtB,MAAMyK,EAAMzK,EAAEwJ,MAAQxJ,EAAE0K,UACxB,IAAKD,EAAK,OACV,MAEME,EAFI,IAAIzC,KAAKuC,GAEJvB,mBAAmB,QAAS,CAAEC,SAAUH,IAEjD4B,EADM,IAAI1C,KAAKyC,EAAO,mBACbE,SAEfL,GADaI,EAAK,GAAK,IACR/S,KAAKiC,OAAOuQ,OAAOrK,EAAE8F,WAAa,GAAK,MAEjD,CAAE1M,OAbI,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAajCD,OAAQqR,IAC9B,CAAC9D,IAEJ,OACE/N,EAAAA,EAAAA,MAAA,OAAKyH,UAAU,YAAWvH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,+cAMAC,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,OAAMvH,UACnBF,EAAAA,EAAAA,MAAA,OAAKgC,MAAO,CAAEC,QAAS,OAAQkQ,SAAU,OAAQjQ,IAAK,IAAKhC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEoQ,KAAM,YAAalS,UAC/BC,EAAAA,EAAAA,KAACkS,EAAAA,EAAY,CACXrH,MAAOsG,EACP5F,MAAK,GAAA7L,OAAKX,KAAKiC,MAAsB,IAAhBmQ,GAAoB,iBACzCgB,QAAS,eACT3R,MAAM,eAGVX,EAAAA,EAAAA,MAAA,OAAKgC,MAAO,CAAEoQ,KAAM,EAAGG,SAAU,KAAMrS,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEuC,WAAY,IAAKiO,aAAc,GAAItS,SAAC,oBAGlDC,EAAAA,EAAAA,KAAC/B,EAAS,CAACE,KAAMkT,EAAOjT,MAAO,IAAKC,OAAQ,MAC5C2B,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,QAAQzF,MAAO,CAAEG,UAAW,GAAIjC,SAAC,6EAQtDF,EAAAA,EAAAA,MAAA,OAAKyH,UAAU,OAAMvH,SAAA,EACnBF,EAAAA,EAAAA,MAAA,OACEgC,MAAO,CACLC,QAAS,OACTmH,eAAgB,gBAChBD,WAAY,UACZjJ,SAAA,EAEFC,EAAAA,EAAAA,KAAA,MAAI6B,MAAO,CAAEyQ,OAAQ,GAAIvS,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,UAAQsH,UAAU,iBAAiBkB,QAASA,IAAMqG,GAAa,GAAM9O,SAAC,mBAIxEC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEG,UAAW,IAAKjC,UAC5BC,EAAAA,EAAAA,KAACuE,EAAS,CACRC,MAAOA,EACPE,QAASoK,EACTrK,OAAQA,IAAMoK,GAAa,WAIjC7O,EAAAA,EAAAA,KAACwL,EAAU,CACTrD,KAAMyG,EACNnD,QAASjH,EACTkH,QAASA,IAAMmD,GAAa,GAC5BlD,OAAQrB,UACN,UACQqF,EAAAA,EAAM4C,IAAI,iBAAkB,CAAE/N,MAAOgO,IAC3C3D,GAAa,SACPoB,IACNhB,EAAS,CAAE9G,MAAM,EAAM+G,IAAK,eAC9B,CAAE,MAAAhF,GAAO,MAGblK,EAAAA,EAAAA,KAAC8M,EAAK,CACJ3E,KAAM6G,EAAM7G,KACZ4E,QAASiC,EAAME,IACfxD,QAASA,IAAMuD,EAAS,CAAE9G,MAAM,EAAO+G,IAAK,QAE9ClP,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,OAAMvH,UACnBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEuC,WAAY,IAAKiO,aAAc,GAAItS,SAAC,0BAGlDC,EAAAA,EAAAA,KAACI,EAAQ,CACPC,OAAQoR,EAAoBpR,OAC5BC,OAAQmR,EAAoBnR,OAC5BlC,MAAO,IACPC,OAAQ,IACRmC,MAAM,UACNC,UAAQ,UAIdT,EAAAA,EAAAA,KAAA,OAAKsH,UAAU,OAAMvH,UACnBF,EAAAA,EAAAA,MAAA,QAAM4S,SA7MEjN,IACZA,EAAEkD,iBAEFgK,MAAM,0BA0MoBpL,UAAU,OAAMvH,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SACEoM,YAAY,OACZvB,MAAOiD,EAAKxL,KACZ+J,SAAW7G,GAAMuI,GAAOzB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIwB,GAAI,IAAExL,KAAMkD,EAAE+G,OAAO1B,YAErD7K,EAAAA,EAAAA,KAAA,SACEoM,YAAY,QACZvB,MAAOiD,EAAKE,MACZ3B,SAAW7G,GAAMuI,GAAOzB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIwB,GAAI,IAAEE,MAAOxI,EAAE+G,OAAO1B,YAEtD7K,EAAAA,EAAAA,KAAA,UAAQ2S,KAAK,SAAQ5S,SAAC,iB","sources":["components/charts/Sparkline.jsx","components/charts/BarChart.jsx","components/links/PlatformIcons.jsx","components/links/LinksGrid.jsx","components/links/LinksModal.jsx","components/common/Toast.jsx","pages/ProfilePage.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\n\r\n// Simple SVG sparkline for small time series\r\nexport default function Sparkline({\r\n  data = [], // array of numbers\r\n  width = 300,\r\n  height = 80,\r\n  stroke = \"#6366f1\",\r\n  fill = \"rgba(99,102,241,0.12)\",\r\n  strokeWidth = 2,\r\n}) {\r\n  const { path, area } = useMemo(() => {\r\n    if (!data || data.length === 0) return { path: \"\", area: \"\" };\r\n    const n = data.length;\r\n    const max = Math.max(1, ...data);\r\n    const min = Math.min(0, ...data);\r\n    const span = Math.max(1, max - min);\r\n    const dx = n > 1 ? width / (n - 1) : 0;\r\n    const points = data.map((v, i) => {\r\n      const x = i * dx;\r\n      const y = height - ((v - min) / span) * height;\r\n      return [x, y];\r\n    });\r\n    const d = points\r\n      .map(([x, y], i) => (i === 0 ? `M ${x},${y}` : `L ${x},${y}`))\r\n      .join(\" \");\r\n    const a = [\r\n      `M 0,${height}`,\r\n      ...points.map(([x, y], i) => (i === 0 ? `L ${x},${y}` : `L ${x},${y}`)),\r\n      `L ${width},${height}`,\r\n      \"Z\",\r\n    ].join(\" \");\r\n    return { path: d, area: a };\r\n  }, [data, width, height]);\r\n\r\n  return (\r\n    <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\r\n      {area ? <path d={area} fill={fill} stroke=\"none\" /> : null}\r\n      {path ? (\r\n        <path\r\n          d={path}\r\n          fill=\"none\"\r\n          stroke={stroke}\r\n          strokeWidth={strokeWidth}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      ) : null}\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\n\r\n// Minimal SVG bar chart without external deps\r\nexport default function BarChart({\r\n  values = [], // numbers\r\n  labels = [], // strings same length as values (optional)\r\n  width = 420,\r\n  height = 140,\r\n  barGap = 4,\r\n  color = \"#22c55e\",\r\n  showAxis = false,\r\n  maxValue, // optional max for y scale\r\n}) {\r\n  const { bars, xLabels } = useMemo(() => {\r\n    const n = values.length;\r\n    if (!n) return { bars: [], xLabels: [] };\r\n    const max = maxValue ?? Math.max(1, ...values);\r\n    const barWidth = Math.max(1, Math.floor((width - (n - 1) * barGap) / n));\r\n    let x = 0;\r\n    const bs = values.map((v) => {\r\n      const h = Math.round((Math.max(0, v) / max) * (height - 2));\r\n      const bar = { x, y: height - h, w: barWidth, h };\r\n      x += barWidth + barGap;\r\n      return bar;\r\n    });\r\n    const xs = labels && labels.length === n ? labels : Array(n).fill(\"\");\r\n    return { bars: bs, xLabels: xs };\r\n  }, [values, labels, width, height, barGap, maxValue]);\r\n\r\n  return (\r\n    <div>\r\n      <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\r\n        {showAxis ? (\r\n          <g>\r\n            <line\r\n              x1={0}\r\n              y1={height - 1}\r\n              x2={width}\r\n              y2={height - 1}\r\n              stroke=\"#e5e7eb\"\r\n            />\r\n            <line x1={0} y1={0} x2={0} y2={height} stroke=\"#e5e7eb\" />\r\n          </g>\r\n        ) : null}\r\n        {bars.map((b, i) => (\r\n          <rect\r\n            key={i}\r\n            x={b.x}\r\n            y={b.y}\r\n            width={b.w}\r\n            height={b.h}\r\n            rx={3}\r\n            fill={color}\r\n            opacity={0.9}\r\n          />\r\n        ))}\r\n      </svg>\r\n      {xLabels.some(Boolean) ? (\r\n        <div style={{ display: \"flex\", gap: barGap, marginTop: 6 }}>\r\n          {xLabels.map((l, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                width: `${Math.max(\r\n                  1,\r\n                  Math.floor(\r\n                    (width - (xLabels.length - 1) * barGap) / xLabels.length\r\n                  )\r\n                )}px`,\r\n                textAlign: \"center\",\r\n                fontSize: 10,\r\n                color: \"#6b7280\",\r\n              }}\r\n            >\r\n              {l}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\n// Minimal, brand-inspired monogram SVGs to avoid heavy assets\r\n// Each icon is a rounded square with a two-letter code; colors follow brand accents\r\nexport const platformMeta = {\r\n  leetcode: { name: \"LeetCode\", fg: \"#f59e0b\", bg: \"#0f0f0f\", code: \"LC\" },\r\n  codechef: { name: \"CodeChef\", fg: \"#f5e6ca\", bg: \"#3b2f2f\", code: \"CC\" },\r\n  codeforces: { name: \"Codeforces\", fg: \"#ef4444\", bg: \"#0b2e5b\", code: \"CF\" },\r\n  smartinterviews: {\r\n    name: \"SmartInterviews\",\r\n    fg: \"#34d399\",\r\n    bg: \"#0b3a5b\",\r\n    code: \"SI\",\r\n  },\r\n  striverSheet: {\r\n    name: \"Striver Sheet\",\r\n    fg: \"#34d399\",\r\n    bg: \"#0b3d1f\",\r\n    code: \"SS\",\r\n  },\r\n  linkedin: { name: \"LinkedIn\", fg: \"#ffffff\", bg: \"#0a66c2\", code: \"in\" },\r\n  github: { name: \"GitHub\", fg: \"#e5e7eb\", bg: \"#000000\", code: \"GH\" },\r\n  discord: { name: \"Discord\", fg: \"#ffffff\", bg: \"#5865F2\", code: \"DC\" },\r\n  spotify: { name: \"Spotify\", fg: \"#0b0b0b\", bg: \"#1DB954\", code: \"SP\" },\r\n  eduprime: { name: \"EduPrime\", fg: \"#ffffff\", bg: \"#1e3a8a\", code: \"ED\" },\r\n  youtube: { name: \"YouTube\", fg: \"#ffffff\", bg: \"#ff0000\", code: \"YT\" },\r\n  gmail: { name: \"Gmail\", fg: \"#111827\", bg: \"#ffffff\", code: \"GM\" },\r\n  atcoder: { name: \"AtCoder\", fg: \"#a5f3fc\", bg: \"#0b2e5b\", code: \"AC\" },\r\n  spoj: { name: \"SPOJ\", fg: \"#60a5fa\", bg: \"#1f2937\", code: \"SJ\" },\r\n  hackerrank: { name: \"HackerRank\", fg: \"#2ec866\", bg: \"#0b3d2a\", code: \"HR\" },\r\n  interviewbit: {\r\n    name: \"InterviewBit\",\r\n    fg: \"#38bdf8\",\r\n    bg: \"#0b2e5b\",\r\n    code: \"IB\",\r\n  },\r\n};\r\n\r\nexport function PlatformIcon({ keyName, size = 44, radius = 10, ariaLabel }) {\r\n  const meta = platformMeta[keyName] || {\r\n    name: keyName,\r\n    fg: \"#e5e7eb\",\r\n    bg: \"#111827\",\r\n    code: keyName?.slice(0, 2)?.toUpperCase() || \"?\",\r\n  };\r\n  return (\r\n    <svg\r\n      width={size}\r\n      height={size}\r\n      viewBox={`0 0 ${size} ${size}`}\r\n      role=\"img\"\r\n      aria-label={ariaLabel || meta.name}\r\n      style={{ display: \"block\" }}\r\n    >\r\n      <rect x=\"0\" y=\"0\" width={size} height={size} rx={radius} fill={meta.bg} />\r\n      <text\r\n        x=\"50%\"\r\n        y=\"50%\"\r\n        dominantBaseline=\"middle\"\r\n        textAnchor=\"middle\"\r\n        fontWeight=\"700\"\r\n        fontFamily=\"system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif\"\r\n        fontSize={Math.round(size * 0.42)}\r\n        fill={meta.fg}\r\n      >\r\n        {meta.code}\r\n      </text>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default PlatformIcon;\r\n","import React from \"react\";\r\nimport PlatformIcon, { platformMeta } from \"./PlatformIcons\";\r\n\r\nconst order = [\r\n  \"leetcode\",\r\n  \"codechef\",\r\n  \"codeforces\",\r\n  \"smartinterviews\",\r\n  \"striverSheet\",\r\n  \"linkedin\",\r\n  \"github\",\r\n  \"discord\",\r\n  \"spotify\",\r\n  \"eduprime\",\r\n  \"youtube\",\r\n  \"gmail\",\r\n  \"atcoder\",\r\n  \"spoj\",\r\n  \"hackerrank\",\r\n  \"interviewbit\",\r\n];\r\n\r\nexport default function LinksGrid({ links = {}, onEdit, loading = false }) {\r\n  const baseItems = order.filter((k) => platformMeta[k]);\r\n  const [pinned, setPinned] = React.useState(() => {\r\n    try {\r\n      const raw = localStorage.getItem(\"dd.links.pinned\");\r\n      const arr = raw ? JSON.parse(raw) : [];\r\n      return Array.isArray(arr) ? arr : [];\r\n    } catch (e) {\r\n      return [];\r\n    }\r\n  });\r\n  const [copiedKey, setCopiedKey] = React.useState(null);\r\n\r\n  const normalizedPinned = pinned.filter((k) => baseItems.includes(k));\r\n  const sortedItems = [\r\n    ...normalizedPinned,\r\n    ...baseItems.filter((k) => !normalizedPinned.includes(k)),\r\n  ];\r\n\r\n  const savePinned = (arr) => {\r\n    setPinned(arr);\r\n    try {\r\n      localStorage.setItem(\"dd.links.pinned\", JSON.stringify(arr));\r\n    } catch {}\r\n  };\r\n  const togglePin = (key) => {\r\n    if (pinned.includes(key)) {\r\n      savePinned(pinned.filter((k) => k !== key));\r\n    } else {\r\n      savePinned([...pinned, key]);\r\n    }\r\n  };\r\n  const isPinned = (key) => pinned.includes(key);\r\n\r\n  // Color helpers to derive pastel backgrounds and accents from brand color\r\n  const hexToRgb = (hex) => {\r\n    const h = hex.replace(\"#\", \"\");\r\n    const v =\r\n      h.length === 3\r\n        ? h\r\n            .split(\"\")\r\n            .map((c) => c + c)\r\n            .join(\"\")\r\n        : h;\r\n    const num = parseInt(v, 16);\r\n    return { r: (num >> 16) & 255, g: (num >> 8) & 255, b: num & 255 };\r\n  };\r\n  const rgbToHex = ({ r, g, b }) =>\r\n    `#${[r, g, b]\r\n      .map((n) => {\r\n        const m = Math.max(0, Math.min(255, Math.round(n)));\r\n        const s = m.toString(16);\r\n        return s.length === 1 ? \"0\" + s : s;\r\n      })\r\n      .join(\"\")}`;\r\n  const mix = (c1, c2, t) => {\r\n    const a = hexToRgb(c1);\r\n    const b = hexToRgb(c2);\r\n    return rgbToHex({\r\n      r: a.r + (b.r - a.r) * t,\r\n      g: a.g + (b.g - a.g) * t,\r\n      b: a.b + (b.b - a.b) * t,\r\n    });\r\n  };\r\n  const rgba = (hex, a) => {\r\n    const { r, g, b } = hexToRgb(hex);\r\n    return `rgba(${r}, ${g}, ${b}, ${a})`;\r\n  };\r\n  const deriveTokens = (brand) => {\r\n    // Pastel top/bottom (very light), bright border, stronger tile, accent\r\n    const top = mix(\"#ffffff\", brand, 0.12);\r\n    const bottom = mix(\"#ffffff\", brand, 0.18);\r\n    const border = mix(brand, \"#ffffff\", 0.25);\r\n    const accent = mix(\"#ffffff\", brand, 0.5);\r\n    const tileTop = mix(\"#ffffff\", brand, 0.45);\r\n    const tileBottom = mix(\"#ffffff\", brand, 0.35);\r\n    return { top, bottom, border, accent, tileTop, tileBottom };\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <style>{`\r\n  .links-grid { display:grid; gap:20px; grid-template-columns: repeat(2, minmax(0, 1fr)); }\r\n  @media (max-width: 767px){ .links-grid { grid-template-columns: 1fr; } }\r\n  .link-card { border-radius: 28px; padding: 0; min-height: 96px; display:flex; align-items:stretch; justify-content:space-between; box-shadow: 0 8px 24px rgba(0,0,0,0.06); border: 2px solid transparent; transition: transform .2s cubic-bezier(.22,1,.36,1), box-shadow .2s, border-color .2s; outline: none; cursor: pointer; position: relative; overflow: hidden; }\r\n        .link-card:hover { transform: translateY(-2px) scale(1.01); box-shadow: 0 10px 28px rgba(0,0,0,0.10); }\r\n        .link-card:focus-visible { box-shadow: 0 0 0 2px rgba(99,102,241,.4), 0 8px 24px rgba(0,0,0,0.06); }\r\n  .link-meta { display:flex; align-items:center; gap:16px; min-width:0; flex: 1; margin: 16px 18px; }\r\n        .icon-tile { width: 52px; height: 52px; border-radius: 12px; display:grid; place-items:center; box-shadow: 0 4px 14px rgba(0,0,0,0.06); border: 1px solid rgba(0,0,0,0.06); flex: 0 0 auto; }\r\n  .content { flex: 1; min-width: 0; display:flex; flex-direction: column; justify-content: flex-start; gap: 10px; }\r\n        .title-row { display:flex; align-items:center; gap: 10px; flex-wrap: wrap; }\r\n        .link-title { font-weight:600; margin:0; font-size: 17px; color: #0b0b0b; }\r\n         .subtitle { font-size: 12px; color: #6b7280; line-height: 1; }\r\n        .chip { font-size: 12px; font-weight: 600; padding: 4px 10px; border-radius: 999px; border: 1px solid transparent; }\r\n  .actions { display:flex; align-items:center; gap: 12px; flex-wrap: wrap; margin-top: 8px; }\r\n        .btn { height: 36px; border-radius: 999px; padding: 0 14px; font-weight: 600; font-size: 14px; border: 2px solid transparent; background: transparent; color: #0b0b0b; }\r\n        .btn:disabled { opacity: .7; cursor: not-allowed; }\r\n        .skeleton { background: linear-gradient(90deg, #eef1f5, #f7f9fb, #eef1f5); background-size: 200% 100%; animation: shimmer 1.2s infinite; border-radius: 28px; height:128px; }\r\n        @keyframes shimmer { 0%{ background-position: 200% 0 } 100%{ background-position: -200% 0 } }\r\n      `}</style>\r\n\r\n      <div className=\"links-grid\" role=\"list\">\r\n        {loading\r\n          ? Array.from({ length: baseItems.length || 8 }).map((_, i) => (\r\n              <div key={i} className=\"skeleton\" />\r\n            ))\r\n          : sortedItems.map((key) => {\r\n              const meta = platformMeta[key];\r\n              const url = links[key] || \"\";\r\n              const has = !!url;\r\n              const tokens = deriveTokens(meta.bg);\r\n              // Gmail special-case: black border and black edit text\r\n              if (key === \"gmail\") {\r\n                tokens.border = \"#000000\";\r\n                tokens.accent = \"#000000\";\r\n              }\r\n\r\n              const getHost = (u) => {\r\n                if (!u) return \"\";\r\n                try {\r\n                  const parsed = new URL(u);\r\n                  return parsed.hostname.replace(/^www\\./, \"\");\r\n                } catch {\r\n                  try {\r\n                    const parsed = new URL(\"https://\" + u);\r\n                    return parsed.hostname.replace(/^www\\./, \"\");\r\n                  } catch {\r\n                    return \"\";\r\n                  }\r\n                }\r\n              };\r\n              const open = () => {\r\n                if (has) window.open(url, \"_blank\", \"noreferrer\");\r\n              };\r\n              return (\r\n                <div\r\n                  key={key}\r\n                  className=\"card link-card\"\r\n                  style={{\r\n                    background: `linear-gradient(180deg, ${tokens.top}, ${tokens.bottom})`,\r\n                    borderColor: key === \"gmail\" ? \"#000\" : tokens.border,\r\n                  }}\r\n                  role=\"listitem\"\r\n                  aria-label={`${meta.name} score card${\r\n                    has ? \" (connected)\" : \" (link not added)\"\r\n                  }`}\r\n                  tabIndex={0}\r\n                  onClick={open}\r\n                  onKeyDown={(e) => {\r\n                    if ((e.key === \"Enter\" || e.key === \" \") && has) {\r\n                      e.preventDefault();\r\n                      open();\r\n                    }\r\n                  }}\r\n                >\r\n                  {/* Pin toggle */}\r\n                  <button\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      togglePin(key);\r\n                    }}\r\n                    aria-label={\r\n                      isPinned(key) ? `Unpin ${meta.name}` : `Pin ${meta.name}`\r\n                    }\r\n                    title={isPinned(key) ? \"Unpin\" : \"Pin\"}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: 12,\r\n                      right: 12,\r\n                      width: 32,\r\n                      height: 32,\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      borderRadius: 999,\r\n                      background: rgba(tokens.top, 0.65),\r\n                      border: `1px solid ${rgba(tokens.border, 0.6)}`,\r\n                      color: tokens.accent,\r\n                      zIndex: 2,\r\n                      cursor: \"pointer\",\r\n                      lineHeight: 0,\r\n                      boxShadow: `0 2px 6px ${rgba(tokens.border, 0.25)}`,\r\n                    }}\r\n                  >\r\n                    <svg\r\n                      style={{ display: \"block\" }}\r\n                      width=\"26\"\r\n                      height=\"26\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      preserveAspectRatio=\"xMidYMid meet\"\r\n                      fill={isPinned(key) ? tokens.accent : \"none\"}\r\n                      stroke={tokens.accent}\r\n                      strokeWidth=\"1.8\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      aria-hidden\r\n                    >\r\n                      <path d=\"M12 17.27L18.18 21 16.54 13.97 22 9.24l-7.19-.62L12 2 9.19 8.62 2 9.24l5.46 4.73L5.82 21z\" />\r\n                    </svg>\r\n                  </button>\r\n                  {/* Decorative background layers */}\r\n                  <div\r\n                    aria-hidden\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      inset: 0,\r\n                      pointerEvents: \"none\",\r\n                    }}\r\n                  >\r\n                    {/* Blob top-left */}\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: -30,\r\n                        left: -40,\r\n                        width: 180,\r\n                        height: 180,\r\n                        background: `radial-gradient(closest-side, ${rgba(\r\n                          tokens.accent,\r\n                          0.18\r\n                        )}, transparent 70%)`,\r\n                        filter: \"blur(8px)\",\r\n                      }}\r\n                    />\r\n                    {/* Blob bottom-right */}\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        bottom: -40,\r\n                        right: -30,\r\n                        width: 200,\r\n                        height: 200,\r\n                        background: `radial-gradient(closest-side, ${rgba(\r\n                          tokens.tileTop,\r\n                          0.16\r\n                        )}, transparent 70%)`,\r\n                        filter: \"blur(10px)\",\r\n                      }}\r\n                    />\r\n                    {/* Accent arc curve */}\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: -60,\r\n                        right: -60,\r\n                        width: 220,\r\n                        height: 220,\r\n                        borderRadius: \"50%\",\r\n                        border: `18px solid ${rgba(tokens.border, 0.25)}`,\r\n                        borderLeftColor: \"transparent\",\r\n                        borderBottomColor: \"transparent\",\r\n                        transform: \"rotate(20deg)\",\r\n                        opacity: 0.7,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"link-meta\">\r\n                    <div\r\n                      className=\"icon-tile\"\r\n                      style={{\r\n                        background: `linear-gradient(180deg, ${tokens.tileTop}, ${tokens.tileBottom})`,\r\n                        borderColor: tokens.border,\r\n                      }}\r\n                    >\r\n                      <PlatformIcon\r\n                        keyName={key}\r\n                        ariaLabel={`${meta.name} icon`}\r\n                        size={32}\r\n                      />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                      <div className=\"title-row\">\r\n                        <h3 className=\"link-title\">{meta.name}</h3>\r\n                        {has ? (\r\n                          <div\r\n                            className=\"subtitle\"\r\n                            aria-label={`${meta.name} host`}\r\n                          >\r\n                            {getHost(url)}\r\n                          </div>\r\n                        ) : null}\r\n                        <span\r\n                          className=\"chip\"\r\n                          style={{\r\n                            background: has\r\n                              ? mix(tokens.top, tokens.accent, 0.18)\r\n                              : \"#eef2f7\",\r\n                            color: has ? \"#0b0b0b\" : \"#475569\",\r\n                            borderColor: has ? tokens.border : \"#dbe2ea\",\r\n                          }}\r\n                        >\r\n                          {has ? \"Connected\" : \"Link not added\"}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"actions\">\r\n                        <button\r\n                          className=\"btn\"\r\n                          style={{\r\n                            background: has\r\n                              ? mix(tokens.top, tokens.accent, 0.22)\r\n                              : \"#f3f6fb\",\r\n                            color: has ? \"#0b0b0b\" : \"#64748b\",\r\n                            borderColor: has ? tokens.border : \"#cbd5e1\",\r\n                          }}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            if (has) open();\r\n                          }}\r\n                          disabled={!has}\r\n                          aria-label={\r\n                            has\r\n                              ? `Visit ${meta.name}`\r\n                              : `${meta.name} link not added`\r\n                          }\r\n                        >\r\n                          Visit\r\n                        </button>\r\n                        {has ? (\r\n                          <button\r\n                            className=\"btn\"\r\n                            style={{\r\n                              background: mix(tokens.top, tokens.accent, 0.12),\r\n                              color: \"#0b0b0b\",\r\n                              borderColor: tokens.border,\r\n                            }}\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              const doCopy = async () => {\r\n                                try {\r\n                                  if (\r\n                                    navigator.clipboard &&\r\n                                    navigator.clipboard.writeText\r\n                                  ) {\r\n                                    await navigator.clipboard.writeText(url);\r\n                                  } else {\r\n                                    const ta =\r\n                                      document.createElement(\"textarea\");\r\n                                    ta.value = url;\r\n                                    document.body.appendChild(ta);\r\n                                    ta.select();\r\n                                    document.execCommand(\"copy\");\r\n                                    document.body.removeChild(ta);\r\n                                  }\r\n                                  setCopiedKey(key);\r\n                                  setTimeout(() => setCopiedKey(null), 1200);\r\n                                } catch {}\r\n                              };\r\n                              doCopy();\r\n                            }}\r\n                            aria-label={`Copy ${meta.name} link`}\r\n                          >\r\n                            {copiedKey === key ? \"Copied\" : \"Copy\"}\r\n                          </button>\r\n                        ) : null}\r\n                        <button\r\n                          className=\"btn\"\r\n                          style={{\r\n                            color: key === \"gmail\" ? \"#000\" : tokens.accent,\r\n                            borderColor:\r\n                              key === \"gmail\" ? \"#000\" : tokens.border,\r\n                            background: \"transparent\",\r\n                          }}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            onEdit?.();\r\n                          }}\r\n                          aria-label={`Edit ${meta.name} link`}\r\n                        >\r\n                          Edit Link\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst fields = [\r\n  { key: \"leetcode\", label: \"LeetCode\" },\r\n  { key: \"codechef\", label: \"CodeChef\" },\r\n  { key: \"codeforces\", label: \"Codeforces\" },\r\n  { key: \"hackerrank\", label: \"HackerRank\" },\r\n  { key: \"spoj\", label: \"SPOJ\" },\r\n  { key: \"interviewbit\", label: \"InterviewBit\" },\r\n  { key: \"atcoder\", label: \"AtCoder\" },\r\n  { key: \"smartinterviews\", label: \"SmartInterviews\" },\r\n  { key: \"striverSheet\", label: \"Striver Sheet\" },\r\n  { key: \"linkedin\", label: \"LinkedIn\" },\r\n  { key: \"github\", label: \"GitHub\" },\r\n  { key: \"discord\", label: \"Discord\" },\r\n  { key: \"spotify\", label: \"Spotify\" },\r\n  { key: \"eduprime\", label: \"EduPrime\" },\r\n  { key: \"youtube\", label: \"YouTube\" },\r\n  { key: \"gmail\", label: \"Gmail\" },\r\n];\r\n\r\nexport default function LinksModal({ open, initial, onClose, onSave }) {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    setValues(initial || {});\r\n    setErrors({});\r\n  }, [initial, open]);\r\n\r\n  if (!open) return null;\r\n\r\n  const validate = () => {\r\n    const errs = {};\r\n    for (const f of fields) {\r\n      const v = (values[f.key] || \"\").trim();\r\n      // Allow empty. Only flag obvious invalid characters; backend will normalize protocol.\r\n      if (v && /[\"'<>\\s]/.test(v)) errs[f.key] = \"Contains invalid characters\";\r\n    }\r\n    setErrors(errs);\r\n    return Object.keys(errs).length === 0;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      className=\"modal-backdrop\"\r\n      onKeyDown={(e) => e.key === \"Escape\" && onClose()}\r\n    >\r\n      <div className=\"modal\" style={{ maxHeight: \"80vh\", overflow: \"auto\" }}>\r\n        <h3 style={{ marginTop: 0 }}>Edit Links</h3>\r\n        <div className=\"grid\" style={{ gap: 10 }}>\r\n          {fields.map((f) => (\r\n            <label key={f.key} style={{ display: \"grid\", gap: 4 }}>\r\n              <span style={{ fontSize: 12 }}>{f.label}</span>\r\n              <input\r\n                aria-label={f.label}\r\n                placeholder={`https://... (${f.label})`}\r\n                value={values[f.key] || \"\"}\r\n                onChange={(e) =>\r\n                  setValues({ ...values, [f.key]: e.target.value })\r\n                }\r\n              />\r\n              {errors[f.key] && (\r\n                <span role=\"alert\" style={{ color: \"#ef4444\", fontSize: 12 }}>\r\n                  {errors[f.key]}\r\n                </span>\r\n              )}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            gap: 8,\r\n            marginTop: 12,\r\n          }}\r\n        >\r\n          <button className=\"button\" onClick={onClose}>\r\n            Cancel\r\n          </button>\r\n          <button\r\n            className=\"button primary\"\r\n            onClick={() => {\r\n              if (!validate()) return;\r\n              onSave(values);\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nexport default function Toast({ open, message, onClose, duration = 2500 }) {\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    const id = setTimeout(() => onClose?.(), duration);\r\n    return () => clearTimeout(id);\r\n  }, [open, duration, onClose]);\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div style={{ position: \"fixed\", top: 16, right: 16, zIndex: 60 }}>\r\n      <div\r\n        role=\"status\"\r\n        aria-live=\"polite\"\r\n        style={{\r\n          background: \"#111827\",\r\n          color: \"#e5e7eb\",\r\n          border: \"1px solid #374151\",\r\n          borderRadius: 12,\r\n          padding: \"10px 14px\",\r\n          boxShadow: \"0 12px 32px -12px rgba(0,0,0,.5)\",\r\n          maxWidth: 360,\r\n        }}\r\n      >\r\n        {message}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { TimerContext } from \"../context/TimerContext\";\r\nimport ProgressRing from \"../components/Dashboard/ProgressRing\";\r\nimport Sparkline from \"../components/charts/Sparkline\";\r\nimport BarChart from \"../components/charts/BarChart\";\r\nimport axios from \"../api/axios\";\r\nimport LinksGrid from \"../components/links/LinksGrid\";\r\nimport LinksModal from \"../components/links/LinksModal\";\r\nimport Toast from \"../components/common/Toast\";\r\n\r\nconst ProfilePage = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const { streak, fetchStreak } = useContext(TimerContext);\r\n  const [recentSessions, setRecentSessions] = useState([]);\r\n  const [form, setForm] = useState({\r\n    name: user?.name || \"\",\r\n    email: user?.email || \"\",\r\n  });\r\n\r\n  // CP State\r\n  const [cpLoading, setCpLoading] = useState(false);\r\n  const [cp, setCp] = useState({\r\n    mode: \"manual\",\r\n    links: {},\r\n    usernames: {},\r\n    preferences: { showScorecards: true, theme: \"auto\" },\r\n    selfReportedStats: {},\r\n  });\r\n  // My Links state\r\n  const [links, setLinks] = useState({});\r\n  const [linksOpen, setLinksOpen] = useState(false);\r\n  const [linksLoading, setLinksLoading] = useState(false);\r\n  const [toast, setToast] = useState({ open: false, msg: \"\" });\r\n\r\n  const save = (e) => {\r\n    e.preventDefault();\r\n    // TODO: implement profile save endpoint\r\n    alert(\"Profile saved (mock).\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStreak?.();\r\n    // fetch last ~60 days of sessions for charts\r\n    const end = new Date();\r\n    const start = new Date();\r\n    start.setDate(end.getDate() - 60);\r\n    const qs = `from=${encodeURIComponent(\r\n      start.toISOString()\r\n    )}&to=${encodeURIComponent(end.toISOString())}`;\r\n    axios\r\n      .get(`/readingSessions?${qs}`)\r\n      .then((res) => setRecentSessions(res.data || []))\r\n      .catch(() => setRecentSessions([]));\r\n  }, []);\r\n\r\n  // Load CP config\r\n  const loadCP = async () => {\r\n    try {\r\n      setCpLoading(true);\r\n      const a = await axios.get(\"/profile/cp\");\r\n      setCp(a.data || cp);\r\n    } catch (e) {\r\n      // noop: keep defaults\r\n    } finally {\r\n      setCpLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadCP();\r\n  }, []);\r\n\r\n  // Load My Links\r\n  const loadLinks = async () => {\r\n    try {\r\n      setLinksLoading(true);\r\n      const res = await axios.get(\"/profile/links\");\r\n      setLinks(res.data || {});\r\n    } catch {\r\n      setLinks({});\r\n    } finally {\r\n      setLinksLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadLinks();\r\n  }, []);\r\n\r\n  // Consistency scoring (last 30 days, IST-based)\r\n  const tz = \"Asia/Kolkata\";\r\n  const toISTDate = (d) =>\r\n    new Date(d).toLocaleDateString(\"en-CA\", { timeZone: tz });\r\n  const today = useMemo(\r\n    () => new Date().toLocaleDateString(\"en-CA\", { timeZone: tz }),\r\n    []\r\n  );\r\n  const activeSet = useMemo(() => {\r\n    const s = new Set();\r\n    (streak || [])\r\n      .filter((d) => d.isActive)\r\n      .forEach((d) => {\r\n        if (d.date) s.add(toISTDate(d.date));\r\n      });\r\n    return s;\r\n  }, [streak]);\r\n\r\n  const lastNDays = (n) => {\r\n    const out = [];\r\n    const base = new Date(`${today}T00:00:00+05:30`);\r\n    for (let i = n - 1; i >= 0; i--) {\r\n      const dt = new Date(base);\r\n      dt.setDate(base.getDate() - i);\r\n      out.push(dt.toLocaleDateString(\"en-CA\", { timeZone: tz }));\r\n    }\r\n    return out;\r\n  };\r\n\r\n  const days30 = lastNDays(30);\r\n  const active30 = days30.map((d) => (activeSet.has(d) ? 1 : 0));\r\n  const consistency30 = active30.reduce((a, b) => a + b, 0) / 30; // 0..1\r\n\r\n  // Simple “streak momentum”: rolling 7-day average for sparkline\r\n  const spark = useMemo(() => {\r\n    const win = 7;\r\n    const arr = [];\r\n    for (let i = 0; i < active30.length; i++) {\r\n      const start = Math.max(0, i - win + 1);\r\n      const slice = active30.slice(start, i + 1);\r\n      const avg = slice.reduce((a, b) => a + b, 0) / slice.length;\r\n      arr.push(Number((avg * 100).toFixed(0))); // percent for nicer scale\r\n    }\r\n    return arr;\r\n  }, [active30]);\r\n\r\n  // Growth charts from recentSessions\r\n\r\n  const weekdayDistribution = useMemo(() => {\r\n    const days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n    const totals = Array(7).fill(0);\r\n    recentSessions.forEach((s) => {\r\n      const src = s.date || s.startTime;\r\n      if (!src) return;\r\n      const d = new Date(src);\r\n      // Convert to IST weekday\r\n      const dStr = d.toLocaleDateString(\"en-CA\", { timeZone: tz });\r\n      const ist = new Date(dStr + \"T00:00:00+05:30\");\r\n      const wd = ist.getDay(); // 0..6 Sun..Sat\r\n      const idx = (wd + 6) % 7; // 0..6 Mon..Sun\r\n      totals[idx] += Math.round((Number(s.duration) || 0) / 60);\r\n    });\r\n    return { labels: days, values: totals };\r\n  }, [recentSessions]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Profile & Settings</h2>\r\n      <style>{`\r\n        .modal-backdrop{position:fixed;inset:0;background:rgba(0,0,0,.5);display:flex;align-items:center;justify-content:center;z-index:50}\r\n        .modal{background:var(--card-bg, #111827);color:var(--fg, #e5e7eb);padding:16px;border-radius:8px;min-width:320px;max-width:560px;width:100%}\r\n        .badge{background:#e5e7eb;color:#111;border-radius:999px;padding:2px 8px;font-size:12px}\r\n        .primary{background:#6366f1;border-color:#6366f1}\r\n      `}</style>\r\n      <div className=\"card\">\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: 24 }}>\r\n          <div style={{ flex: \"0 0 auto\" }}>\r\n            <ProgressRing\r\n              value={consistency30}\r\n              label={`${Math.round(consistency30 * 100)}% consistency`}\r\n              caption={\"Last 30 days\"}\r\n              color=\"#6366f1\"\r\n            />\r\n          </div>\r\n          <div style={{ flex: 1, minWidth: 280 }}>\r\n            <div style={{ fontWeight: 600, marginBottom: 6 }}>\r\n              7-day momentum\r\n            </div>\r\n            <Sparkline data={spark} width={420} height={80} />\r\n            <div className=\"muted\" style={{ marginTop: 6 }}>\r\n              Daily activity (1 = active, 0 = inactive) smoothed over 7 days.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Competitive Programming overview removed per request */}\r\n      {/* My Links */}\r\n      <div className=\"card\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <h3 style={{ margin: 0 }}>My Links</h3>\r\n          <button className=\"button primary\" onClick={() => setLinksOpen(true)}>\r\n            Edit Links\r\n          </button>\r\n        </div>\r\n        <div style={{ marginTop: 12 }}>\r\n          <LinksGrid\r\n            links={links}\r\n            loading={linksLoading}\r\n            onEdit={() => setLinksOpen(true)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <LinksModal\r\n        open={linksOpen}\r\n        initial={links}\r\n        onClose={() => setLinksOpen(false)}\r\n        onSave={async (vals) => {\r\n          try {\r\n            await axios.put(\"/profile/links\", { links: vals });\r\n            setLinksOpen(false);\r\n            await loadLinks();\r\n            setToast({ open: true, msg: \"Links saved\" });\r\n          } catch {}\r\n        }}\r\n      />\r\n      <Toast\r\n        open={toast.open}\r\n        message={toast.msg}\r\n        onClose={() => setToast({ open: false, msg: \"\" })}\r\n      />\r\n      <div className=\"card\">\r\n        <div>\r\n          <div style={{ fontWeight: 600, marginBottom: 8 }}>\r\n            Weekday distribution\r\n          </div>\r\n          <BarChart\r\n            values={weekdayDistribution.values}\r\n            labels={weekdayDistribution.labels}\r\n            width={720}\r\n            height={160}\r\n            color=\"#f59e0b\"\r\n            showAxis\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"card\">\r\n        <form onSubmit={save} className=\"grid\">\r\n          <input\r\n            placeholder=\"Name\"\r\n            value={form.name}\r\n            onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n          />\r\n          <input\r\n            placeholder=\"Email\"\r\n            value={form.email}\r\n            onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n          />\r\n          <button type=\"submit\">Save</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["Sparkline","_ref","data","width","height","stroke","fill","strokeWidth","path","area","useMemo","length","n","max","Math","min","span","dx","points","map","v","i","_ref2","x","y","concat","join","_ref3","_jsxs","viewBox","children","_jsx","d","strokeLinecap","strokeLinejoin","BarChart","values","labels","barGap","color","showAxis","maxValue","bars","xLabels","barWidth","floor","h","round","bar","w","Array","x1","y1","x2","y2","b","rx","opacity","some","Boolean","style","display","gap","marginTop","l","textAlign","fontSize","platformMeta","leetcode","name","fg","bg","code","codechef","codeforces","smartinterviews","striverSheet","linkedin","github","discord","spotify","eduprime","youtube","gmail","atcoder","spoj","hackerrank","interviewbit","_keyName$slice","keyName","size","radius","ariaLabel","meta","slice","toUpperCase","role","dominantBaseline","textAnchor","fontWeight","fontFamily","order","LinksGrid","links","onEdit","loading","baseItems","filter","k","pinned","setPinned","React","raw","localStorage","getItem","arr","JSON","parse","isArray","e","copiedKey","setCopiedKey","normalizedPinned","includes","sortedItems","savePinned","setItem","stringify","_unused","isPinned","key","hexToRgb","hex","replace","split","c","num","parseInt","r","g","mix","c1","c2","t","a","s","toString","rgbToHex","rgba","className","from","_","url","has","tokens","brand","top","bottom","border","accent","tileTop","tileBottom","open","window","background","borderColor","tabIndex","onClick","onKeyDown","preventDefault","stopPropagation","togglePin","title","position","right","alignItems","justifyContent","borderRadius","zIndex","cursor","lineHeight","boxShadow","preserveAspectRatio","inset","pointerEvents","left","borderLeftColor","borderBottomColor","transform","PlatformIcon","u","URL","hostname","_unused2","_unused3","getHost","disabled","async","navigator","clipboard","writeText","ta","document","createElement","value","body","appendChild","select","execCommand","removeChild","setTimeout","_unused4","doCopy","fields","label","LinksModal","initial","onClose","onSave","setValues","useState","errors","setErrors","useEffect","maxHeight","overflow","f","placeholder","onChange","_objectSpread","target","validate","errs","trim","test","Object","keys","Toast","message","duration","id","clearTimeout","padding","maxWidth","ProfilePage","user","useContext","AuthContext","streak","fetchStreak","TimerContext","recentSessions","setRecentSessions","form","setForm","email","cpLoading","setCpLoading","cp","setCp","mode","usernames","preferences","showScorecards","theme","selfReportedStats","setLinks","linksOpen","setLinksOpen","linksLoading","setLinksLoading","toast","setToast","msg","end","Date","start","setDate","getDate","qs","encodeURIComponent","toISOString","axios","get","then","res","catch","loadCP","loadLinks","tz","today","toLocaleDateString","timeZone","activeSet","Set","isActive","forEach","date","add","toISTDate","active30","out","base","dt","push","lastNDays","consistency30","reduce","spark","avg","Number","toFixed","weekdayDistribution","totals","src","startTime","dStr","wd","getDay","flexWrap","flex","ProgressRing","caption","minWidth","marginBottom","margin","put","vals","onSubmit","alert","type"],"sourceRoot":""}