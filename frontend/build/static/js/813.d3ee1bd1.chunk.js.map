{"version":3,"file":"static/js/813.d3ee1bd1.chunk.js","mappings":"4NAGe,SAASA,EAASC,GAO7B,IAP8B,KAChCC,EAAO,GAAE,MACTC,EAAQ,IAAG,OACXC,EAAS,GAAE,OACXC,EAAS,UAAS,KAClBC,EAAO,wBAAuB,YAC9BC,EAAc,GACfN,EACC,MAAM,KAAEO,EAAI,KAAEC,IAASC,EAAAA,EAAAA,SAAQ,KAC7B,IAAKR,GAAwB,IAAhBA,EAAKS,OAAc,MAAO,CAAEH,KAAM,GAAIC,KAAM,IACzD,MAAMG,EAAIV,EAAKS,OACTE,EAAMC,KAAKD,IAAI,KAAMX,GACrBa,EAAMD,KAAKC,IAAI,KAAMb,GACrBc,EAAOF,KAAKD,IAAI,EAAGA,EAAME,GACzBE,EAAKL,EAAI,EAAIT,GAASS,EAAI,GAAK,EAC/BM,EAAShB,EAAKiB,IAAI,CAACC,EAAGC,IAGnB,CAFGA,EAAIJ,EACJb,GAAWgB,EAAIL,GAAOC,EAAQZ,IAY1C,MAAO,CAAEI,KATCU,EACPC,IAAI,CAAAG,EAASD,KAAC,IAARE,EAAGC,GAAEF,EAAA,OAAe,IAAND,EAAO,KAAAI,OAAQF,EAAC,KAAAE,OAAID,GAAC,KAAAC,OAAUF,EAAC,KAAAE,OAAID,KACxDE,KAAK,KAOUjB,KANR,CAAC,OAADgB,OACDrB,MACJc,EAAOC,IAAI,CAAAQ,EAASN,KAAC,IAARE,EAAGC,GAAEG,EAAA,MAAgB,KAAAF,OAAQF,EAAC,KAAAE,OAAID,KAAsB,KAADC,OAClEtB,EAAK,KAAAsB,OAAIrB,GACd,KACAsB,KAAK,OAEN,CAACxB,EAAMC,EAAOC,IAEjB,OACEwB,EAAAA,EAAAA,MAAA,OAAKzB,MAAOA,EAAOC,OAAQA,EAAQyB,QAAO,OAAAJ,OAAStB,EAAK,KAAAsB,OAAIrB,GAAS0B,SAAA,CAClErB,GAAOsB,EAAAA,EAAAA,KAAA,QAAMC,EAAGvB,EAAMH,KAAMA,EAAMD,OAAO,SAAY,KACrDG,GACCuB,EAAAA,EAAAA,KAAA,QACEC,EAAGxB,EACHF,KAAK,OACLD,OAAQA,EACRE,YAAaA,EACb0B,cAAc,QACdC,eAAe,UAEf,OAGV,CC/Ce,SAASC,EAAQlC,GAS5B,IAT6B,OAC/BmC,EAAS,GAAE,OACXC,EAAS,GAAE,MACXlC,EAAQ,IAAG,OACXC,EAAS,IAAG,OACZkC,EAAS,EAAC,MACVC,EAAQ,UAAS,SACjBC,GAAW,EAAK,SAChBC,GACDxC,EACC,MAAM,KAAEyC,EAAI,QAAEC,IAAYjC,EAAAA,EAAAA,SAAQ,KAChC,MAAME,EAAIwB,EAAOzB,OACjB,IAAKC,EAAG,MAAO,CAAE8B,KAAM,GAAIC,QAAS,IACpC,MAAM9B,EAAc,OAAR4B,QAAQ,IAARA,EAAAA,EAAY3B,KAAKD,IAAI,KAAMuB,GACjCQ,EAAW9B,KAAKD,IAAI,EAAGC,KAAK+B,OAAO1C,GAASS,EAAI,GAAK0B,GAAU1B,IACrE,IAAIW,EAAI,EAQR,MAAO,CAAEmB,KAPEN,EAAOjB,IAAKC,IACrB,MAAM0B,EAAIhC,KAAKiC,MAAOjC,KAAKD,IAAI,EAAGO,GAAKP,GAAQT,EAAS,IAClD4C,EAAM,CAAEzB,IAAGC,EAAGpB,EAAS0C,EAAGG,EAAGL,EAAUE,KAE7C,OADAvB,GAAKqB,EAAWN,EACTU,IAGUL,QADRN,GAAUA,EAAO1B,SAAWC,EAAIyB,EAASa,MAAMtC,GAAGN,KAAK,MAEjE,CAAC8B,EAAQC,EAAQlC,EAAOC,EAAQkC,EAAQG,IAE3C,OACEb,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKzB,MAAOA,EAAOC,OAAQA,EAAQyB,QAAO,OAAAJ,OAAStB,EAAK,KAAAsB,OAAIrB,GAAS0B,SAAA,CAClEU,GACCZ,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,QACEoB,GAAI,EACJC,GAAIhD,EAAS,EACbiD,GAAIlD,EACJmD,GAAIlD,EAAS,EACbC,OAAO,aAET0B,EAAAA,EAAAA,KAAA,QAAMoB,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAIlD,EAAQC,OAAO,eAE9C,KACHqC,EAAKvB,IAAI,CAACoC,EAAGlC,KACZU,EAAAA,EAAAA,KAAA,QAEER,EAAGgC,EAAEhC,EACLC,EAAG+B,EAAE/B,EACLrB,MAAOoD,EAAEN,EACT7C,OAAQmD,EAAET,EACVU,GAAI,EACJlD,KAAMiC,EACNkB,QAAS,IAPJpC,OAWVsB,EAAQe,KAAKC,UACZ5B,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEC,QAAS,OAAQC,IAAKxB,EAAQyB,UAAW,GAAIjC,SACxDa,EAAQxB,IAAI,CAAC6C,EAAG3C,KACfU,EAAAA,EAAAA,KAAA,OAEE6B,MAAO,CACLzD,MAAM,GAADsB,OAAKX,KAAKD,IACb,EACAC,KAAK+B,OACF1C,GAASwC,EAAQhC,OAAS,GAAK2B,GAAUK,EAAQhC,SAErD,MACDsD,UAAW,SACXC,SAAU,GACV3B,MAAO,WACPT,SAEDkC,GAbI3C,MAiBT,OAGV,C,cC/EA,MAAM8C,EAAQ,CACZC,SAAU,CAAEC,GAAI,UAAWC,GAAI,WAC/BC,SAAU,CAAEF,GAAI,UAAWC,GAAI,WAC/BE,WAAY,CAAEH,GAAI,UAAWC,GAAI,WACjCG,QAAS,CAAEJ,GAAI,UAAWC,GAAI,YAGjB,SAASI,EAAYzE,GAA0C,IAAzC,SAAE0E,EAAQ,KAAEC,EAAI,MAAEC,EAAK,YAAEC,GAAa7E,EACzE,MAAO8E,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GACnC1B,EAAIY,EAAMQ,IAAa,CAAEN,GAAI,UAAWC,GAAI,WAC5CY,EAA2B,kBAATN,GAAqB,gBAAgBO,KAAKP,GAElE,OACEhD,EAAAA,EAAAA,MAAA,OACEwD,UAAU,OACVxB,MAAO,CACLyB,WAAW,2BAAD5D,OAA6B8B,EAAEc,GAAE,mBAC3C9B,MAAOgB,EAAEe,IACTxC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,OACE6B,MAAO,CACLC,QAAS,OACTyB,eAAgB,gBAChBC,WAAY,UACZzD,UAEFC,EAAAA,EAAAA,KAAA,MAAI6B,MAAO,CAAE4B,OAAQ,GAAI1D,SAAE6C,MAE5BE,GACCjD,EAAAA,EAAAA,MAAA,OACEgC,MAAO,CACLC,QAAS,OACT4B,oBAAqB,4BACrB3B,IAAK,GACLhC,SAAA,CAED4D,OAAOC,QAAQd,GAAO1D,IAAIG,IAAA,IAAEsE,EAAGxE,GAAEE,EAAA,OAChCF,GAAW,gBAANwE,GACHhE,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEM,SAAU,GAAIT,QAAS,IAAM3B,SAAE8D,KAC7C7D,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEiC,WAAY,KAAM/D,SAAEV,MAF1BwE,GAIR,OAELf,EAAMiB,cACLlE,EAAAA,EAAAA,MAAA,OAAKgC,MAAO,CAAEmC,WAAY,SAAU7B,SAAU,GAAIT,QAAS,IAAM3B,SAAA,CAAC,iBACjD,IAAIkE,KAAKnB,EAAMiB,aAAaG,wBAKjDlE,EAAAA,EAAAA,KAAA,OAAKqD,UAAU,QAAOtD,SAAC,yBAEzBF,EAAAA,EAAAA,MAAA,OACEgC,MAAO,CAAEC,QAAS,OAAQC,IAAK,EAAGC,UAAW,GAAIwB,WAAY,UAAWzD,SAAA,CAEvEoD,GACCnD,EAAAA,EAAAA,KAAA,KAAGqD,UAAU,SAASc,KAAMtB,EAAMuB,OAAO,SAASC,IAAI,aAAYtE,SAAC,kBAInEC,EAAAA,EAAAA,KAAA,QAAMqD,UAAU,QAAQxB,MAAO,CAAEM,SAAU,IAAKpC,SAAC,iBAIlDgD,GACC/C,EAAAA,EAAAA,KAAA,UAAQqD,UAAU,SAASiB,QAASA,IAAMrB,EAAazD,IAAOA,GAAGO,SAC9DiD,EAAW,OAAS,eAErB,QAELD,GAAeC,GACdhD,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEG,UAAW,IAAKjC,SAAEgD,IAC9B,OAGV,C,wBClEO,MAAMwB,EAAe,CAC1BC,SAAU,CACRC,KAAM,WACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMC,EAAAA,KAERC,SAAU,CACRL,KAAM,WACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMG,EAAAA,KAERC,WAAY,CACVP,KAAM,aACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMK,EAAAA,KAERC,gBAAiB,CACfT,KAAM,kBACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMO,EAAAA,KAERC,aAAc,CACZX,KAAM,gBACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMC,EAAAA,KAERQ,SAAU,CACRZ,KAAM,WACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMU,EAAAA,KAERC,OAAQ,CACNd,KAAM,SACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMY,EAAAA,KAERC,QAAS,CACPhB,KAAM,UACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMc,EAAAA,KAERC,QAAS,CACPlB,KAAM,UACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMgB,EAAAA,KAERC,SAAU,CACRpB,KAAM,WACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMkB,EAAAA,KAERC,QAAS,CACPtB,KAAM,UACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMoB,EAAAA,KAERC,MAAO,CACLxB,KAAM,QACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMsB,EAAAA,KAERC,QAAS,CACP1B,KAAM,UACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACNqC,KAAMwB,EAAAA,KAENC,KAAM,CACJ5B,KAAM,OACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAMK,EAAAA,KAERqB,WAAY,CACV7B,KAAM,aACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAM2B,EAAAA,KAERC,aAAc,CACZ/B,KAAM,eACNnC,GAAI,UACJoC,IAAK,UACLC,OAAQ,UACRpC,GAAI,UACJqC,KAAM6B,EAAAA,MAwCV,QA3BO,SAAqBvI,GAAkD,IAAjD,QAAEwI,EAAO,KAAEC,EAAO,GAAE,OAAEC,EAAS,GAAE,UAAEC,GAAW3I,EACzE,MAAM4I,EAAOvC,EAAamC,IAAY,CACpCjC,KAAMiC,EACNnE,GAAI,UACJD,GAAI,UACJsC,KAAMkB,EAAAA,KAEFiB,EAAOD,EAAKlC,MAAQkB,EAAAA,IAC1B,OACE9F,EAAAA,EAAAA,KAAA,OACEgH,KAAK,MACL,aAAYH,GAAaC,EAAKrC,KAC9B5C,MAAO,CACLzD,MAAOuI,EACPtI,OAAQsI,EACRM,aAAcL,EACdtD,WAAYwD,EAAKxE,GACjB9B,MAAOsG,EAAKvE,GACZT,QAAS,OACToF,WAAY,UACZnH,UAEFC,EAAAA,EAAAA,KAAC+G,EAAI,CAACJ,KAAM5H,KAAKiC,MAAa,GAAP2F,MAG7B,EC5KMQ,EAAQ,CACZ,WACA,WACA,aACA,kBACA,eACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,UACA,OACA,aACA,gBAGa,SAASC,EAASlJ,GAAsC,IAArC,MAAEmJ,EAAK,OAAEC,EAAM,QAAEC,GAAU,GAAOrJ,EAClE,MAAMsJ,EAAQL,EAAMM,OAAQ5D,GAAMU,EAAaV,IAE/C,OACEhE,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,01DAsBAC,EAAAA,EAAAA,KAAA,OAAKqD,UAAU,aAAa2D,KAAK,OAAMjH,SACpCwH,EACGpG,MAAMuG,KAAK,CAAE9I,OAAQ4I,EAAM5I,QAAU,IAAKQ,IAAI,CAACuI,EAAGrI,KAChDU,EAAAA,EAAAA,KAAA,OAAaqD,UAAU,YAAb/D,IAEZkI,EAAMpI,IAAKwI,IACT,MAAMd,EAAOvC,EAAaqD,GACpBC,GAAW,OAALR,QAAK,IAALA,OAAK,EAALA,EAAQO,KAAQ,GACtBE,IAAQD,EACd,IAAIE,EAAW,GACf,IACMD,IAAKC,EAAW,IAAIC,IAAIH,GAAKE,SACnC,CAAE,MAAAE,GAAO,CAET,MAAMC,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GD8EtB,SAA8BP,GACnC,MAAMQ,EAAI7D,EAAaqD,GACvB,OAAKQ,EAIE,CAAE9E,WAHO,2BAAA5D,OAA8B0I,EAAE9F,GAAE,SAAA5C,OAChD0I,EAAE1D,KAAO0D,EAAE9F,GAAE,UAEM9B,MAAO4H,EAAEzD,QAAU,WAJzB,CAAErB,WAAY,UAAW9C,MAAO,UAKjD,CCpFmB6H,CAAqBT,IAAI,IAC5BU,UAAWR,EAAG,qBAAApI,OAAwBoH,EAAKvE,GAAE,WAAOgG,IAGtD,OACE1I,EAAAA,EAAAA,MAAA,OAEEwD,UAAU,YACVxB,MAAOqG,EACPM,SAAU,EACVxB,KAAK,WACL,gBAAAtH,OAAeoH,EAAKrC,KAAI,cAAa1E,SAAA,EAErCF,EAAAA,EAAAA,MAAA,OAAKwD,UAAU,YAAWtD,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAE4G,KAAM,YAAa1I,UAC/BC,EAAAA,EAAAA,KAAC0I,EAAY,CACXhC,QAASkB,EACTf,UAAS,GAAAnH,OAAKoH,EAAKrC,KAAI,cAG3B5E,EAAAA,EAAAA,MAAA,OAAKgC,MAAO,CAAE8G,SAAU,GAAI5I,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKqD,UAAU,aAAYtD,SAAE+G,EAAKrC,QAClCzE,EAAAA,EAAAA,KAAA,OAAKqD,UAAU,WAAUtD,SACtB+H,EAAMC,EAAW,yBAIvBD,GACC9H,EAAAA,EAAAA,KAAA,KACEqD,UAAU,cACVc,KAAM0D,EACNzD,OAAO,SACPC,IAAI,aACJ,sBAAA3E,OAAqBoH,EAAKrC,MAAO1E,SAClC,WAIDC,EAAAA,EAAAA,KAAA,UACEqD,UAAU,MACViB,QAASgD,EACT,oBAAA5H,OAAmBoH,EAAKrC,KAAI,SAAQ1E,SACrC,eApCE6H,SA8CvB,CCrHA,MAAMgB,EAAS,CACb,CAAEhB,IAAK,WAAYiB,MAAO,YAC1B,CAAEjB,IAAK,WAAYiB,MAAO,YAC1B,CAAEjB,IAAK,aAAciB,MAAO,cAC5B,CAAEjB,IAAK,aAAciB,MAAO,cAC5B,CAAEjB,IAAK,OAAQiB,MAAO,QACtB,CAAEjB,IAAK,eAAgBiB,MAAO,gBAC9B,CAAEjB,IAAK,UAAWiB,MAAO,WACzB,CAAEjB,IAAK,kBAAmBiB,MAAO,mBACjC,CAAEjB,IAAK,eAAgBiB,MAAO,iBAC9B,CAAEjB,IAAK,WAAYiB,MAAO,YAC1B,CAAEjB,IAAK,SAAUiB,MAAO,UACxB,CAAEjB,IAAK,UAAWiB,MAAO,WACzB,CAAEjB,IAAK,UAAWiB,MAAO,WACzB,CAAEjB,IAAK,WAAYiB,MAAO,YAC1B,CAAEjB,IAAK,UAAWiB,MAAO,WACzB,CAAEjB,IAAK,QAASiB,MAAO,UAGV,SAASC,EAAU5K,GAAsC,IAArC,KAAE6K,EAAI,QAAEC,EAAO,QAAEC,EAAO,OAAEC,GAAQhL,EACnE,MAAOmC,EAAQ8I,IAAajG,EAAAA,EAAAA,UAAS,CAAC,IAC/BkG,EAAQC,IAAanG,EAAAA,EAAAA,UAAS,CAAC,GAOtC,IALAoG,EAAAA,EAAAA,WAAU,KACRH,EAAUH,GAAW,CAAC,GACtBK,EAAU,CAAC,IACV,CAACL,EAASD,KAERA,EAAM,OAAO,KAalB,OACE/I,EAAAA,EAAAA,KAAA,OACEgH,KAAK,SACL,aAAW,OACX3D,UAAU,iBACVkG,UAAYC,GAAgB,WAAVA,EAAE5B,KAAoBqB,IAAUlJ,UAElDF,EAAAA,EAAAA,MAAA,OAAKwD,UAAU,QAAQxB,MAAO,CAAE4H,UAAW,OAAQC,SAAU,QAAS3J,SAAA,EACpEC,EAAAA,EAAAA,KAAA,MAAI6B,MAAO,CAAEG,UAAW,GAAIjC,SAAC,gBAC7BC,EAAAA,EAAAA,KAAA,OAAKqD,UAAU,OAAOxB,MAAO,CAAEE,IAAK,IAAKhC,SACtC6I,EAAOxJ,IAAKuK,IACX9J,EAAAA,EAAAA,MAAA,SAAmBgC,MAAO,CAAEC,QAAS,OAAQC,IAAK,GAAIhC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,QAAM6B,MAAO,CAAEM,SAAU,IAAKpC,SAAE4J,EAAEd,SAClC7I,EAAAA,EAAAA,KAAA,SACE,aAAY2J,EAAEd,MACde,YAAW,gBAAAlK,OAAkBiK,EAAEd,MAAK,KACpCgB,MAAOxJ,EAAOsJ,EAAE/B,MAAQ,GACxBkC,SAAWN,GACTL,GAAShB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI9H,GAAM,IAAE,CAACsJ,EAAE/B,KAAM4B,EAAEpF,OAAOyF,WAG5CT,EAAOO,EAAE/B,OACR5H,EAAAA,EAAAA,KAAA,QAAMgH,KAAK,QAAQnF,MAAO,CAAErB,MAAO,UAAW2B,SAAU,IAAKpC,SAC1DqJ,EAAOO,EAAE/B,SAZJ+B,EAAE/B,SAkBlB/H,EAAAA,EAAAA,MAAA,OACEgC,MAAO,CACLC,QAAS,OACTyB,eAAgB,WAChBxB,IAAK,EACLC,UAAW,IACXjC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UAAQqD,UAAU,SAASiB,QAAS2E,EAAQlJ,SAAC,YAG7CC,EAAAA,EAAAA,KAAA,UACEqD,UAAU,iBACViB,QAASA,KArDFyF,MACf,MAAMC,EAAO,CAAC,EACd,IAAK,MAAML,KAAKf,EAAQ,CACtB,MAAMvJ,GAAKgB,EAAOsJ,EAAE/B,MAAQ,IAAIqC,OAE5B5K,GAAK,WAAW+D,KAAK/D,KAAI2K,EAAKL,EAAE/B,KAAO,8BAC7C,CAEA,OADAyB,EAAUW,GAC0B,IAA7BrG,OAAOuG,KAAKF,GAAMpL,QA8CVmL,IACLb,EAAO7I,IACPN,SACH,gBAOX,CC9Fe,SAASoK,EAAKjM,GAA+C,IAA9C,KAAE6K,EAAI,QAAEqB,EAAO,QAAEnB,EAAO,SAAEoB,EAAW,MAAMnM,EAOvE,OANAoL,EAAAA,EAAAA,WAAU,KACR,IAAKP,EAAM,OACX,MAAMuB,EAAKC,WAAW,IAAa,OAAPtB,QAAO,IAAPA,OAAO,EAAPA,IAAaoB,GACzC,MAAO,IAAMG,aAAaF,IACzB,CAACvB,EAAMsB,EAAUpB,IAEfF,GAGH/I,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAE4I,SAAU,QAASC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,IAAK7K,UAChEC,EAAAA,EAAAA,KAAA,OACEgH,KAAK,SACL,YAAU,SACVnF,MAAO,CACLyB,WAAY,UACZ9C,MAAO,UACPqK,OAAQ,oBACR5D,aAAc,GACd6D,QAAS,YACTxC,UAAW,mCACXyC,SAAU,KACVhL,SAEDqK,MAjBW,IAqBpB,CClBA,MA0SA,EA1SoBY,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,YAAWC,EAAAA,IACtB,OAAEC,EAAM,YAAEC,IAAgBH,EAAAA,EAAAA,YAAWI,EAAAA,IACpCC,EAAgBC,IAAqBnJ,EAAAA,EAAAA,UAAS,KAC9CoJ,EAAMC,IAAWrJ,EAAAA,EAAAA,UAAS,CAC/BuB,MAAU,OAAJqH,QAAI,IAAJA,OAAI,EAAJA,EAAMrH,OAAQ,GACpB+H,OAAW,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMU,QAAS,MAIjBC,EAAWC,IAAgBxJ,EAAAA,EAAAA,WAAS,IACpCyJ,EAAIC,IAAS1J,EAAAA,EAAAA,UAAS,CAC3B2J,KAAM,SACNxF,MAAO,CAAC,EACRyF,UAAW,CAAC,EACZC,YAAa,CAAEC,gBAAgB,EAAMC,MAAO,QAC5CC,kBAAmB,CAAC,KAGf7F,EAAO8F,IAAYjK,EAAAA,EAAAA,UAAS,CAAC,IAC7BkK,EAAWC,IAAgBnK,EAAAA,EAAAA,WAAS,IACpCoK,EAAcC,IAAmBrK,EAAAA,EAAAA,WAAS,IAC1CsK,EAAOC,IAAYvK,EAAAA,EAAAA,UAAS,CAAE6F,MAAM,EAAO2E,IAAK,MAQvDpE,EAAAA,EAAAA,WAAU,KACG,OAAX4C,QAAW,IAAXA,GAAAA,IAEA,MAAMyB,EAAM,IAAI1J,KACV2J,EAAQ,IAAI3J,KAClB2J,EAAMC,QAAQF,EAAIG,UAAY,IAC9B,MAAMC,EAAE,QAAArO,OAAWsO,mBACjBJ,EAAMK,eACP,QAAAvO,OAAOsO,mBAAmBL,EAAIM,gBAC/BC,EAAAA,EACGC,IAAI,oBAADzO,OAAqBqO,IACxBK,KAAMC,GAAQhC,EAAkBgC,EAAIlQ,MAAQ,KAC5CmQ,MAAM,IAAMjC,EAAkB,MAChC,KAcH/C,EAAAA,EAAAA,WAAU,KAXKiF,WACb,IACE7B,GAAa,GACb,MAAM8B,QAAUN,EAAAA,EAAMC,IAAI,eAC1BvB,EAAM4B,EAAErQ,MAAQwO,EAClB,CAAE,MAAOnD,GACP,CACD,QACCkD,GAAa,EACf,GAGA+B,IACC,IAGH,MAAMC,EAAYH,UAChB,IACEhB,GAAgB,GAChB,MAAMc,QAAYH,EAAAA,EAAMC,IAAI,kBAC5BhB,EAASkB,EAAIlQ,MAAQ,CAAC,EACxB,CAAE,MAAA8J,GACAkF,EAAS,CAAC,EACZ,CAAC,QACCI,GAAgB,EAClB,IAEFjE,EAAAA,EAAAA,WAAU,KACRoF,KACC,IAGH,MAAMC,EAAK,eAGLC,GAAQjQ,EAAAA,EAAAA,SACZ,KAAM,IAAIsF,MAAO4K,mBAAmB,QAAS,CAAEC,SAAUH,IACzD,IAEII,GAAYpQ,EAAAA,EAAAA,SAAQ,KACxB,MAAMqQ,EAAI,IAAIC,IAMd,OALChD,GAAU,IACRxE,OAAQxH,GAAMA,EAAEiP,UAChBC,QAASlP,IACJA,EAAEmP,MAAMJ,EAAEK,IAXDpP,IACjB,IAAIgE,KAAKhE,GAAG4O,mBAAmB,QAAS,CAAEC,SAAUH,IAU9BW,CAAUrP,EAAEmP,SAE3BJ,GACN,CAAC/C,IAcEsD,EAZa1Q,KACjB,MAAM2Q,EAAM,GACNC,EAAO,IAAIxL,KAAK,GAADvE,OAAIkP,EAAK,oBAC9B,IAAK,IAAItP,EAAIT,EAAI,EAAGS,GAAK,EAAGA,IAAK,CAC/B,MAAMoQ,EAAK,IAAIzL,KAAKwL,GACpBC,EAAG7B,QAAQ4B,EAAK3B,UAAYxO,GAC5BkQ,EAAIG,KAAKD,EAAGb,mBAAmB,QAAS,CAAEC,SAAUH,IACtD,CACA,OAAOa,GAGMI,CAAU,IACDxQ,IAAKa,GAAO8O,EAAUjH,IAAI7H,GAAK,EAAI,GACrD4P,EAAgBN,EAASO,OAAO,CAACtB,EAAGhN,IAAMgN,EAAIhN,EAAG,GAAK,GAGtDuO,GAAQpR,EAAAA,EAAAA,SAAQ,KACpB,MACMqR,EAAM,GACZ,IAAK,IAAI1Q,EAAI,EAAGA,EAAIiQ,EAAS3Q,OAAQU,IAAK,CACxC,MAAMsO,EAAQ7O,KAAKD,IAAI,EAAGQ,EAHhB,EAG0B,GAC9B2Q,EAAQV,EAASU,MAAMrC,EAAOtO,EAAI,GAClC4Q,EAAMD,EAAMH,OAAO,CAACtB,EAAGhN,IAAMgN,EAAIhN,EAAG,GAAKyO,EAAMrR,OACrDoR,EAAIL,KAAKQ,QAAc,IAAND,GAAWE,QAAQ,IACtC,CACA,OAAOJ,GACN,CAACT,IAIEc,GAAsB1R,EAAAA,EAAAA,SAAQ,KAClC,MACM2R,EAASnP,MAAM,GAAG5C,KAAK,GAY7B,OAXA6N,EAAe+C,QAASH,IACtB,MAAMuB,EAAMvB,EAAEI,MAAQJ,EAAEwB,UACxB,IAAKD,EAAK,OACV,MAEME,EAFI,IAAIxM,KAAKsM,GAEJ1B,mBAAmB,QAAS,CAAEC,SAAUH,IAEjD+B,EADM,IAAIzM,KAAKwM,EAAO,mBACbE,SAEfL,GADaI,EAAK,GAAK,IACR3R,KAAKiC,OAAOmP,OAAOnB,EAAE3E,WAAa,GAAK,MAEjD,CAAE/J,OAbI,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAajCD,OAAQiQ,IAC9B,CAAClE,IAEJ,OACEvM,EAAAA,EAAAA,MAAA,OAAKwD,UAAU,YAAWtD,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,+cAMAC,EAAAA,EAAAA,KAAA,OAAKqD,UAAU,OAAMtD,UACnBF,EAAAA,EAAAA,MAAA,OAAKgC,MAAO,CAAEC,QAAS,OAAQ8O,SAAU,OAAQ7O,IAAK,IAAKhC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAE4G,KAAM,YAAa1I,UAC/BC,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAY,CACXhH,MAAOgG,EACPhH,MAAK,GAAAnJ,OAAKX,KAAKiC,MAAsB,IAAhB6O,GAAoB,iBACzCiB,QAAS,eACTtQ,MAAM,eAGVX,EAAAA,EAAAA,MAAA,OAAKgC,MAAO,CAAE4G,KAAM,EAAGE,SAAU,KAAM5I,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEiC,WAAY,IAAKiN,aAAc,GAAIhR,SAAC,oBAGlDC,EAAAA,EAAAA,KAAC/B,EAAS,CAACE,KAAM4R,EAAO3R,MAAO,IAAKC,OAAQ,MAC5C2B,EAAAA,EAAAA,KAAA,OAAKqD,UAAU,QAAQxB,MAAO,CAAEG,UAAW,GAAIjC,SAAC,6EAOtDF,EAAAA,EAAAA,MAAA,OAAKwD,UAAU,OAAMtD,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKqD,UAAU,QAAOtD,SAAC,gDACvBC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEG,UAAW,IAAKjC,UAC5BF,EAAAA,EAAAA,MAAA,OAAKwD,UAAU,SAASxB,MAAO,CAAEE,IAAK,IAAKhC,SAAA,EACzCC,EAAAA,EAAAA,KAAC2C,EAAY,CACXC,SAAS,WACTC,KACc,QAAZoI,EAAA0B,EAAGG,iBAAS,IAAA7B,GAAZA,EAAczG,SAAQ,wBAAA9E,OACMiN,EAAGG,UAAUtI,WAC7B,QAAR0G,EAAAyB,EAAGtF,aAAK,IAAA6D,OAAA,EAARA,EAAU8F,cAAe,IAE/BlO,MACgB,QAAdqI,EAAAwB,EAAGI,mBAAW,IAAA5B,GAAdA,EAAgB6B,eACQ,QADM5B,EAC1BuB,EAAGO,yBAAiB,IAAA9B,OAAA,EAApBA,EAAsB5G,SACtB,QAGRxE,EAAAA,EAAAA,KAAC2C,EAAY,CACXC,SAAS,WACTC,KACc,QAAZwI,EAAAsB,EAAGG,iBAAS,IAAAzB,GAAZA,EAAcvG,SAAQ,kCAAApF,OACgBiN,EAAGG,UAAUhI,WACvC,QAARwG,EAAAqB,EAAGtF,aAAK,IAAAiE,OAAA,EAARA,EAAU2F,cAAe,IAE/BnO,MACgB,QAAdyI,EAAAoB,EAAGI,mBAAW,IAAAxB,GAAdA,EAAgByB,eACQ,QADMxB,EAC1BmB,EAAGO,yBAAiB,IAAA1B,OAAA,EAApBA,EAAsB1G,SACtB,QAGR9E,EAAAA,EAAAA,KAAC2C,EAAY,CACXC,SAAS,aACTC,KACc,QAAZ4I,EAAAkB,EAAGG,iBAAS,IAAArB,GAAZA,EAAczG,WAAU,kCAAAtF,OACciN,EAAGG,UAAU9H,aACvC,QAAR0G,EAAAiB,EAAGtF,aAAK,IAAAqE,OAAA,EAARA,EAAUwF,gBAAiB,IAEjCpO,MACgB,QAAd6I,EAAAgB,EAAGI,mBAAW,IAAApB,GAAdA,EAAgBqB,eACQ,QADMpB,EAC1Be,EAAGO,yBAAiB,IAAAtB,OAAA,EAApBA,EAAsB5G,WACtB,QAGRhF,EAAAA,EAAAA,KAAC2C,EAAY,CACXC,SAAS,UACTC,MAAc,QAARgJ,EAAAc,EAAGtF,aAAK,IAAAwE,OAAA,EAARA,EAAUsF,kBAAmB,IACnCrO,MAAO,gBAMfjD,EAAAA,EAAAA,MAAA,OAAKwD,UAAU,OAAMtD,SAAA,EACnBF,EAAAA,EAAAA,MAAA,OACEgC,MAAO,CACLC,QAAS,OACTyB,eAAgB,gBAChBC,WAAY,UACZzD,SAAA,EAEFC,EAAAA,EAAAA,KAAA,MAAI6B,MAAO,CAAE4B,OAAQ,GAAI1D,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,UAAQqD,UAAU,iBAAiBiB,QAASA,IAAM+I,GAAa,GAAMtN,SAAC,mBAIxEC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEG,UAAW,IAAKjC,UAC5BC,EAAAA,EAAAA,KAACoH,EAAS,CACRC,MAAOA,EACPE,QAAS+F,EACThG,OAAQA,IAAM+F,GAAa,WAIjCrN,EAAAA,EAAAA,KAAC8I,EAAU,CACTC,KAAMqE,EACNpE,QAAS3B,EACT4B,QAASA,IAAMoE,GAAa,GAC5BnE,OAAQqF,UACN,UACQL,EAAAA,EAAMkD,IAAI,iBAAkB,CAAE/J,MAAOgK,IAC3ChE,GAAa,SACPqB,IACNjB,EAAS,CAAE1E,MAAM,EAAM2E,IAAK,eAC9B,CAAE,MAAA4D,GAAO,MAGbtR,EAAAA,EAAAA,KAACmK,EAAK,CACJpB,KAAMyE,EAAMzE,KACZqB,QAASoD,EAAME,IACfzE,QAASA,IAAMwE,EAAS,CAAE1E,MAAM,EAAO2E,IAAK,QAE9C1N,EAAAA,EAAAA,KAAA,OAAKqD,UAAU,OAAMtD,UACnBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAK6B,MAAO,CAAEiC,WAAY,IAAKiN,aAAc,GAAIhR,SAAC,0BAGlDC,EAAAA,EAAAA,KAACI,EAAQ,CACPC,OAAQgQ,EAAoBhQ,OAC5BC,OAAQ+P,EAAoB/P,OAC5BlC,MAAO,IACPC,OAAQ,IACRmC,MAAM,UACNC,UAAQ,UAIdT,EAAAA,EAAAA,KAAA,OAAKqD,UAAU,OAAMtD,UACnBF,EAAAA,EAAAA,MAAA,QAAM0R,SAhQE/H,IACZA,EAAEgI,iBAEFC,MAAM,0BA6PoBpO,UAAU,OAAMtD,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SACE4J,YAAY,OACZC,MAAOyC,EAAK7H,KACZqF,SAAWN,GAAM+C,GAAOpE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAImE,GAAI,IAAE7H,KAAM+E,EAAEpF,OAAOyF,YAErD7J,EAAAA,EAAAA,KAAA,SACE4J,YAAY,QACZC,MAAOyC,EAAKE,MACZ1C,SAAWN,GAAM+C,GAAOpE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAImE,GAAI,IAAEE,MAAOhD,EAAEpF,OAAOyF,YAEtD7J,EAAAA,EAAAA,KAAA,UAAQ0R,KAAK,SAAQ3R,SAAC,iB","sources":["components/charts/Sparkline.jsx","components/charts/BarChart.jsx","components/cp/PlatformCard.jsx","components/links/PlatformIcons.jsx","components/links/LinksGrid.jsx","components/links/LinksModal.jsx","components/common/Toast.jsx","pages/ProfilePage.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\n\r\n// Simple SVG sparkline for small time series\r\nexport default function Sparkline({\r\n  data = [], // array of numbers\r\n  width = 300,\r\n  height = 80,\r\n  stroke = \"#6366f1\",\r\n  fill = \"rgba(99,102,241,0.12)\",\r\n  strokeWidth = 2,\r\n}) {\r\n  const { path, area } = useMemo(() => {\r\n    if (!data || data.length === 0) return { path: \"\", area: \"\" };\r\n    const n = data.length;\r\n    const max = Math.max(1, ...data);\r\n    const min = Math.min(0, ...data);\r\n    const span = Math.max(1, max - min);\r\n    const dx = n > 1 ? width / (n - 1) : 0;\r\n    const points = data.map((v, i) => {\r\n      const x = i * dx;\r\n      const y = height - ((v - min) / span) * height;\r\n      return [x, y];\r\n    });\r\n    const d = points\r\n      .map(([x, y], i) => (i === 0 ? `M ${x},${y}` : `L ${x},${y}`))\r\n      .join(\" \");\r\n    const a = [\r\n      `M 0,${height}`,\r\n      ...points.map(([x, y], i) => (i === 0 ? `L ${x},${y}` : `L ${x},${y}`)),\r\n      `L ${width},${height}`,\r\n      \"Z\",\r\n    ].join(\" \");\r\n    return { path: d, area: a };\r\n  }, [data, width, height]);\r\n\r\n  return (\r\n    <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\r\n      {area ? <path d={area} fill={fill} stroke=\"none\" /> : null}\r\n      {path ? (\r\n        <path\r\n          d={path}\r\n          fill=\"none\"\r\n          stroke={stroke}\r\n          strokeWidth={strokeWidth}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      ) : null}\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\n\r\n// Minimal SVG bar chart without external deps\r\nexport default function BarChart({\r\n  values = [], // numbers\r\n  labels = [], // strings same length as values (optional)\r\n  width = 420,\r\n  height = 140,\r\n  barGap = 4,\r\n  color = \"#22c55e\",\r\n  showAxis = false,\r\n  maxValue, // optional max for y scale\r\n}) {\r\n  const { bars, xLabels } = useMemo(() => {\r\n    const n = values.length;\r\n    if (!n) return { bars: [], xLabels: [] };\r\n    const max = maxValue ?? Math.max(1, ...values);\r\n    const barWidth = Math.max(1, Math.floor((width - (n - 1) * barGap) / n));\r\n    let x = 0;\r\n    const bs = values.map((v) => {\r\n      const h = Math.round((Math.max(0, v) / max) * (height - 2));\r\n      const bar = { x, y: height - h, w: barWidth, h };\r\n      x += barWidth + barGap;\r\n      return bar;\r\n    });\r\n    const xs = labels && labels.length === n ? labels : Array(n).fill(\"\");\r\n    return { bars: bs, xLabels: xs };\r\n  }, [values, labels, width, height, barGap, maxValue]);\r\n\r\n  return (\r\n    <div>\r\n      <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\r\n        {showAxis ? (\r\n          <g>\r\n            <line\r\n              x1={0}\r\n              y1={height - 1}\r\n              x2={width}\r\n              y2={height - 1}\r\n              stroke=\"#e5e7eb\"\r\n            />\r\n            <line x1={0} y1={0} x2={0} y2={height} stroke=\"#e5e7eb\" />\r\n          </g>\r\n        ) : null}\r\n        {bars.map((b, i) => (\r\n          <rect\r\n            key={i}\r\n            x={b.x}\r\n            y={b.y}\r\n            width={b.w}\r\n            height={b.h}\r\n            rx={3}\r\n            fill={color}\r\n            opacity={0.9}\r\n          />\r\n        ))}\r\n      </svg>\r\n      {xLabels.some(Boolean) ? (\r\n        <div style={{ display: \"flex\", gap: barGap, marginTop: 6 }}>\r\n          {xLabels.map((l, i) => (\r\n            <div\r\n              key={i}\r\n              style={{\r\n                width: `${Math.max(\r\n                  1,\r\n                  Math.floor(\r\n                    (width - (xLabels.length - 1) * barGap) / xLabels.length\r\n                  )\r\n                )}px`,\r\n                textAlign: \"center\",\r\n                fontSize: 10,\r\n                color: \"#6b7280\",\r\n              }}\r\n            >\r\n              {l}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nconst brand = {\r\n  LeetCode: { bg: \"#0f0f0f\", fg: \"#f59e0b\" },\r\n  CodeChef: { bg: \"#3b2f2f\", fg: \"#f5e6ca\" },\r\n  Codeforces: { bg: \"#0b2e5b\", fg: \"#ef4444\" },\r\n  Striver: { bg: \"#0b3d1f\", fg: \"#34d399\" },\r\n};\r\n\r\nexport default function PlatformCard({ platform, link, stats, onEditStats }) {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const b = brand[platform] || { bg: \"#111827\", fg: \"#e5e7eb\" };\r\n  const safeLink = typeof link === \"string\" && /^https?:\\/\\//i.test(link);\r\n\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      style={{\r\n        background: `linear-gradient(135deg, ${b.bg} 0%, #111 100%)`,\r\n        color: b.fg,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h3 style={{ margin: 0 }}>{platform}</h3>\r\n      </div>\r\n      {stats ? (\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(2, minmax(0, 1fr))\",\r\n            gap: 8,\r\n          }}\r\n        >\r\n          {Object.entries(stats).map(([k, v]) =>\r\n            v && k !== \"lastUpdated\" ? (\r\n              <div key={k}>\r\n                <div style={{ fontSize: 12, opacity: 0.8 }}>{k}</div>\r\n                <div style={{ fontWeight: 600 }}>{v}</div>\r\n              </div>\r\n            ) : null\r\n          )}\r\n          {stats.lastUpdated && (\r\n            <div style={{ gridColumn: \"1 / -1\", fontSize: 12, opacity: 0.8 }}>\r\n              Last updated: {new Date(stats.lastUpdated).toLocaleString()}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"muted\">Stats not provided.</div>\r\n      )}\r\n      <div\r\n        style={{ display: \"flex\", gap: 8, marginTop: 12, alignItems: \"center\" }}\r\n      >\r\n        {safeLink ? (\r\n          <a className=\"button\" href={link} target=\"_blank\" rel=\"noreferrer\">\r\n            View Profile\r\n          </a>\r\n        ) : (\r\n          <span className=\"muted\" style={{ fontSize: 12 }}>\r\n            Link not set\r\n          </span>\r\n        )}\r\n        {onEditStats ? (\r\n          <button className=\"button\" onClick={() => setExpanded((x) => !x)}>\r\n            {expanded ? \"Hide\" : \"Edit Stats\"}\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n      {onEditStats && expanded ? (\r\n        <div style={{ marginTop: 12 }}>{onEditStats}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  FaGithub,\r\n  FaLinkedin,\r\n  FaDiscord,\r\n  FaSpotify,\r\n  FaYoutube,\r\n  FaGoogle,\r\n} from \"react-icons/fa\";\r\nimport { SiLeetcode, SiCodechef, SiCodeforces, SiHackerrank, SiGmail } from \"react-icons/si\";\r\nimport { FaBriefcase, FaRegLightbulb, FaCode } from \"react-icons/fa\";\r\n\r\n// Brand palette per request (bg/fg for scorecard accent + icon)\r\nexport const platformMeta = {\r\n  leetcode: {\r\n    name: \"LeetCode\",\r\n    bg: \"#0f0f0f\",\r\n    bg2: \"#1e1e1e\",\r\n    cardFg: \"#e5e7eb\",\r\n    fg: \"#f59e0b\",\r\n    icon: SiLeetcode,\r\n  },\r\n  codechef: {\r\n    name: \"CodeChef\",\r\n    bg: \"#3b2f2f\",\r\n    bg2: \"#5a4740\",\r\n    cardFg: \"#f5e6ca\",\r\n    fg: \"#f5e6ca\",\r\n    icon: SiCodechef,\r\n  },\r\n  codeforces: {\r\n    name: \"Codeforces\",\r\n    bg: \"#0b2e5b\",\r\n    bg2: \"#0b2e5b\",\r\n    cardFg: \"#e5e7eb\",\r\n    fg: \"#ef4444\",\r\n    icon: SiCodeforces,\r\n  },\r\n  smartinterviews: {\r\n    name: \"SmartInterviews\",\r\n    bg: \"#ffffff\",\r\n    bg2: \"#fef3c7\",\r\n    cardFg: \"#111827\",\r\n    fg: \"#eab308\",\r\n    icon: FaRegLightbulb,\r\n  },\r\n  striverSheet: {\r\n    name: \"Striver Sheet\",\r\n    bg: \"#064e3b\",\r\n    bg2: \"#065f46\",\r\n    cardFg: \"#e5e7eb\",\r\n    fg: \"#34d399\",\r\n    icon: SiLeetcode,\r\n  },\r\n  linkedin: {\r\n    name: \"LinkedIn\",\r\n    bg: \"#0a66c2\",\r\n    bg2: \"#0f6bdc\",\r\n    cardFg: \"#ffffff\",\r\n    fg: \"#ffffff\",\r\n    icon: FaLinkedin,\r\n  },\r\n  github: {\r\n    name: \"GitHub\",\r\n    bg: \"#000000\",\r\n    bg2: \"#111111\",\r\n    cardFg: \"#e5e7eb\",\r\n    fg: \"#e5e7eb\",\r\n    icon: FaGithub,\r\n  },\r\n  discord: {\r\n    name: \"Discord\",\r\n    bg: \"#5865F2\",\r\n    bg2: \"#4f5ae0\",\r\n    cardFg: \"#ffffff\",\r\n    fg: \"#ffffff\",\r\n    icon: FaDiscord,\r\n  },\r\n  spotify: {\r\n    name: \"Spotify\",\r\n    bg: \"#1DB954\",\r\n    bg2: \"#18a74a\",\r\n    cardFg: \"#0b0b0b\",\r\n    fg: \"#0b0b0b\",\r\n    icon: FaSpotify,\r\n  },\r\n  eduprime: {\r\n    name: \"EduPrime\",\r\n    bg: \"#1e3a8a\",\r\n    bg2: \"#312e81\",\r\n    cardFg: \"#c7d2fe\",\r\n    fg: \"#c7d2fe\",\r\n    icon: FaGoogle,\r\n  },\r\n  youtube: {\r\n    name: \"YouTube\",\r\n    bg: \"#ff0000\",\r\n    bg2: \"#dc2626\",\r\n    cardFg: \"#ffffff\",\r\n    fg: \"#ffffff\",\r\n    icon: FaYoutube,\r\n  },\r\n  gmail: {\r\n    name: \"Gmail\",\r\n    bg: \"#ffffff\",\r\n    bg2: \"#f3f4f6\",\r\n    cardFg: \"#111827\",\r\n    fg: \"#111827\",\r\n    icon: SiGmail,\r\n  },\r\n  atcoder: {\r\n    name: \"AtCoder\",\r\n    bg: \"#0f172a\",\r\n    bg2: \"#111827\",\r\n    cardFg: \"#a5f3fc\",\r\n    fg: \"#a5f3fc\",\r\n  icon: FaCode,\r\n  },\r\n  spoj: {\r\n    name: \"SPOJ\",\r\n    bg: \"#1f2937\",\r\n    bg2: \"#111827\",\r\n    cardFg: \"#60a5fa\",\r\n    fg: \"#60a5fa\",\r\n    icon: SiCodeforces,\r\n  },\r\n  hackerrank: {\r\n    name: \"HackerRank\",\r\n    bg: \"#0b3d2a\",\r\n    bg2: \"#052e22\",\r\n    cardFg: \"#2ec866\",\r\n    fg: \"#2ec866\",\r\n    icon: SiHackerrank,\r\n  },\r\n  interviewbit: {\r\n    name: \"InterviewBit\",\r\n    bg: \"#0b2e5b\",\r\n    bg2: \"#073052\",\r\n    cardFg: \"#c7f9ff\",\r\n    fg: \"#14b8a6\",\r\n    icon: FaBriefcase,\r\n  },\r\n};\r\n\r\nexport function getPlatformCardStyle(key) {\r\n  const m = platformMeta[key];\r\n  if (!m) return { background: \"#0b1220\", color: \"#e5e7eb\" };\r\n  const background = `linear-gradient(135deg, ${m.bg} 0%, ${\r\n    m.bg2 || m.bg\r\n  } 100%)`;\r\n  return { background, color: m.cardFg || \"#e5e7eb\" };\r\n}\r\n\r\nexport function PlatformIcon({ keyName, size = 44, radius = 10, ariaLabel }) {\r\n  const meta = platformMeta[keyName] || {\r\n    name: keyName,\r\n    fg: \"#e5e7eb\",\r\n    bg: \"#111827\",\r\n    icon: FaGoogle,\r\n  };\r\n  const Icon = meta.icon || FaGoogle;\r\n  return (\r\n    <div\r\n      role=\"img\"\r\n      aria-label={ariaLabel || meta.name}\r\n      style={{\r\n        width: size,\r\n        height: size,\r\n        borderRadius: radius,\r\n        background: meta.bg,\r\n        color: meta.fg,\r\n        display: \"grid\",\r\n        placeItems: \"center\",\r\n      }}\r\n    >\r\n      <Icon size={Math.round(size * 0.6)} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlatformIcon;\r\n","import React from \"react\";\r\nimport PlatformIcon, {\r\n  platformMeta,\r\n  getPlatformCardStyle,\r\n} from \"./PlatformIcons\";\r\n\r\nconst order = [\r\n  \"leetcode\",\r\n  \"codechef\",\r\n  \"codeforces\",\r\n  \"smartinterviews\",\r\n  \"striverSheet\",\r\n  \"linkedin\",\r\n  \"github\",\r\n  \"discord\",\r\n  \"spotify\",\r\n  \"eduprime\",\r\n  \"youtube\",\r\n  \"gmail\",\r\n  \"atcoder\",\r\n  \"spoj\",\r\n  \"hackerrank\",\r\n  \"interviewbit\",\r\n];\r\n\r\nexport default function LinksGrid({ links, onEdit, loading = false }) {\r\n  const items = order.filter((k) => platformMeta[k]);\r\n\r\n  return (\r\n    <div>\r\n      <style>{`\r\n        .links-grid { display:grid; gap:24px; }\r\n        @media (min-width: 1024px){ .links-grid { grid-template-columns: repeat(12, 1fr); } }\r\n        @media (min-width: 768px) and (max-width: 1023px){ .links-grid { grid-template-columns: repeat(8, 1fr); } }\r\n        @media (max-width: 767px){ .links-grid { grid-template-columns: repeat(1, 1fr); } }\r\n  .link-card { grid-column: span 3; background: #0b1220; color:#e5e7eb; border-radius: 20px; padding: 20px; box-shadow: 0 10px 30px -12px rgba(0,0,0,.5); display:flex; align-items:center; justify-content:space-between; min-height:132px; transition: transform .15s ease, box-shadow .15s ease; outline: none; }\r\n        .link-card:hover { transform: translateY(-2px); }\r\n        .link-card:focus-visible { box-shadow: 0 0 0 3px #a78bfa; }\r\n        @media (min-width: 1280px){ .link-card { grid-column: span 3; } }\r\n        @media (min-width: 1024px) and (max-width: 1279px){ .link-card { grid-column: span 4; } }\r\n        @media (min-width: 768px) and (max-width: 1023px){ .link-card { grid-column: span 4; } }\r\n        @media (max-width: 767px){ .link-card { grid-column: span 1; } }\r\n        .link-meta { display:flex; align-items:center; gap:14px; min-width:0; }\r\n        .link-title { font-weight:700; }\r\n        .link-sub { font-size:12px; opacity:.9; color:#9ca3af }\r\n        .btn { border:1px solid #374151; background:#111827; color:#e5e7eb; border-radius:10px; padding:8px 12px; }\r\n        .btn.primary { background:#6366f1; border-color:#6366f1; color:#fff; }\r\n        .btn:disabled { opacity:.5; cursor:not-allowed; }\r\n        .skeleton { background: linear-gradient(90deg, #111827, #1f2937, #111827); background-size: 200% 100%; animation: shimmer 1.2s infinite; border-radius: 16px; height:132px; }\r\n        @keyframes shimmer { 0%{ background-position: 200% 0 } 100%{ background-position: -200% 0 } }\r\n      `}</style>\r\n\r\n      <div className=\"links-grid\" role=\"list\">\r\n        {loading\r\n          ? Array.from({ length: items.length || 8 }).map((_, i) => (\r\n              <div key={i} className=\"skeleton\" />\r\n            ))\r\n          : items.map((key) => {\r\n              const meta = platformMeta[key];\r\n              const url = links?.[key] || \"\";\r\n              const has = !!url;\r\n              let hostname = \"\";\r\n              try {\r\n                if (has) hostname = new URL(url).hostname;\r\n              } catch {}\r\n\r\n              const cardStyle = {\r\n                ...getPlatformCardStyle(key),\r\n                boxShadow: has ? `0 12px 32px -12px ${meta.fg}33` : undefined,\r\n              };\r\n\r\n              return (\r\n                <div\r\n                  key={key}\r\n                  className=\"link-card\"\r\n                  style={cardStyle}\r\n                  tabIndex={0}\r\n                  role=\"listitem\"\r\n                  aria-label={`${meta.name} link card`}\r\n                >\r\n                  <div className=\"link-meta\">\r\n                    <div style={{ flex: \"0 0 auto\" }}>\r\n                      <PlatformIcon\r\n                        keyName={key}\r\n                        ariaLabel={`${meta.name} icon`}\r\n                      />\r\n                    </div>\r\n                    <div style={{ minWidth: 0 }}>\r\n                      <div className=\"link-title\">{meta.name}</div>\r\n                      <div className=\"link-sub\">\r\n                        {has ? hostname : \"Link not added\"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {has ? (\r\n                    <a\r\n                      className=\"btn primary\"\r\n                      href={url}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                      aria-label={`Visit ${meta.name}`}\r\n                    >\r\n                      Visit\r\n                    </a>\r\n                  ) : (\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={onEdit}\r\n                      aria-label={`Add ${meta.name} link`}\r\n                    >\r\n                      Add Link\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst fields = [\r\n  { key: \"leetcode\", label: \"LeetCode\" },\r\n  { key: \"codechef\", label: \"CodeChef\" },\r\n  { key: \"codeforces\", label: \"Codeforces\" },\r\n  { key: \"hackerrank\", label: \"HackerRank\" },\r\n  { key: \"spoj\", label: \"SPOJ\" },\r\n  { key: \"interviewbit\", label: \"InterviewBit\" },\r\n  { key: \"atcoder\", label: \"AtCoder\" },\r\n  { key: \"smartinterviews\", label: \"SmartInterviews\" },\r\n  { key: \"striverSheet\", label: \"Striver Sheet\" },\r\n  { key: \"linkedin\", label: \"LinkedIn\" },\r\n  { key: \"github\", label: \"GitHub\" },\r\n  { key: \"discord\", label: \"Discord\" },\r\n  { key: \"spotify\", label: \"Spotify\" },\r\n  { key: \"eduprime\", label: \"EduPrime\" },\r\n  { key: \"youtube\", label: \"YouTube\" },\r\n  { key: \"gmail\", label: \"Gmail\" },\r\n];\r\n\r\nexport default function LinksModal({ open, initial, onClose, onSave }) {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    setValues(initial || {});\r\n    setErrors({});\r\n  }, [initial, open]);\r\n\r\n  if (!open) return null;\r\n\r\n  const validate = () => {\r\n    const errs = {};\r\n    for (const f of fields) {\r\n      const v = (values[f.key] || \"\").trim();\r\n      // Allow empty. Only flag obvious invalid characters; backend will normalize protocol.\r\n      if (v && /[\"'<>\\s]/.test(v)) errs[f.key] = \"Contains invalid characters\";\r\n    }\r\n    setErrors(errs);\r\n    return Object.keys(errs).length === 0;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      role=\"dialog\"\r\n      aria-modal=\"true\"\r\n      className=\"modal-backdrop\"\r\n      onKeyDown={(e) => e.key === \"Escape\" && onClose()}\r\n    >\r\n      <div className=\"modal\" style={{ maxHeight: \"80vh\", overflow: \"auto\" }}>\r\n        <h3 style={{ marginTop: 0 }}>Edit Links</h3>\r\n        <div className=\"grid\" style={{ gap: 10 }}>\r\n          {fields.map((f) => (\r\n            <label key={f.key} style={{ display: \"grid\", gap: 4 }}>\r\n              <span style={{ fontSize: 12 }}>{f.label}</span>\r\n              <input\r\n                aria-label={f.label}\r\n                placeholder={`https://... (${f.label})`}\r\n                value={values[f.key] || \"\"}\r\n                onChange={(e) =>\r\n                  setValues({ ...values, [f.key]: e.target.value })\r\n                }\r\n              />\r\n              {errors[f.key] && (\r\n                <span role=\"alert\" style={{ color: \"#ef4444\", fontSize: 12 }}>\r\n                  {errors[f.key]}\r\n                </span>\r\n              )}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            gap: 8,\r\n            marginTop: 12,\r\n          }}\r\n        >\r\n          <button className=\"button\" onClick={onClose}>\r\n            Cancel\r\n          </button>\r\n          <button\r\n            className=\"button primary\"\r\n            onClick={() => {\r\n              if (!validate()) return;\r\n              onSave(values);\r\n            }}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nexport default function Toast({ open, message, onClose, duration = 2500 }) {\r\n  useEffect(() => {\r\n    if (!open) return;\r\n    const id = setTimeout(() => onClose?.(), duration);\r\n    return () => clearTimeout(id);\r\n  }, [open, duration, onClose]);\r\n\r\n  if (!open) return null;\r\n\r\n  return (\r\n    <div style={{ position: \"fixed\", top: 16, right: 16, zIndex: 60 }}>\r\n      <div\r\n        role=\"status\"\r\n        aria-live=\"polite\"\r\n        style={{\r\n          background: \"#111827\",\r\n          color: \"#e5e7eb\",\r\n          border: \"1px solid #374151\",\r\n          borderRadius: 12,\r\n          padding: \"10px 14px\",\r\n          boxShadow: \"0 12px 32px -12px rgba(0,0,0,.5)\",\r\n          maxWidth: 360,\r\n        }}\r\n      >\r\n        {message}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { TimerContext } from \"../context/TimerContext\";\r\nimport ProgressRing from \"../components/Dashboard/ProgressRing\";\r\nimport Sparkline from \"../components/charts/Sparkline\";\r\nimport BarChart from \"../components/charts/BarChart\";\r\nimport axios from \"../api/axios\";\r\nimport PlatformCard from \"../components/cp/PlatformCard\";\r\nimport LinksGrid from \"../components/links/LinksGrid\";\r\nimport LinksModal from \"../components/links/LinksModal\";\r\nimport Toast from \"../components/common/Toast\";\r\n\r\nconst ProfilePage = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const { streak, fetchStreak } = useContext(TimerContext);\r\n  const [recentSessions, setRecentSessions] = useState([]);\r\n  const [form, setForm] = useState({\r\n    name: user?.name || \"\",\r\n    email: user?.email || \"\",\r\n  });\r\n\r\n  // CP State\r\n  const [cpLoading, setCpLoading] = useState(false);\r\n  const [cp, setCp] = useState({\r\n    mode: \"manual\",\r\n    links: {},\r\n    usernames: {},\r\n    preferences: { showScorecards: true, theme: \"auto\" },\r\n    selfReportedStats: {},\r\n  });\r\n  // My Links state\r\n  const [links, setLinks] = useState({});\r\n  const [linksOpen, setLinksOpen] = useState(false);\r\n  const [linksLoading, setLinksLoading] = useState(false);\r\n  const [toast, setToast] = useState({ open: false, msg: \"\" });\r\n\r\n  const save = (e) => {\r\n    e.preventDefault();\r\n    // TODO: implement profile save endpoint\r\n    alert(\"Profile saved (mock).\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStreak?.();\r\n    // fetch last ~60 days of sessions for charts\r\n    const end = new Date();\r\n    const start = new Date();\r\n    start.setDate(end.getDate() - 60);\r\n    const qs = `from=${encodeURIComponent(\r\n      start.toISOString()\r\n    )}&to=${encodeURIComponent(end.toISOString())}`;\r\n    axios\r\n      .get(`/readingSessions?${qs}`)\r\n      .then((res) => setRecentSessions(res.data || []))\r\n      .catch(() => setRecentSessions([]));\r\n  }, []);\r\n\r\n  // Load CP config\r\n  const loadCP = async () => {\r\n    try {\r\n      setCpLoading(true);\r\n      const a = await axios.get(\"/profile/cp\");\r\n      setCp(a.data || cp);\r\n    } catch (e) {\r\n      // noop: keep defaults\r\n    } finally {\r\n      setCpLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadCP();\r\n  }, []);\r\n\r\n  // Load My Links\r\n  const loadLinks = async () => {\r\n    try {\r\n      setLinksLoading(true);\r\n      const res = await axios.get(\"/profile/links\");\r\n      setLinks(res.data || {});\r\n    } catch {\r\n      setLinks({});\r\n    } finally {\r\n      setLinksLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadLinks();\r\n  }, []);\r\n\r\n  // Consistency scoring (last 30 days, IST-based)\r\n  const tz = \"Asia/Kolkata\";\r\n  const toISTDate = (d) =>\r\n    new Date(d).toLocaleDateString(\"en-CA\", { timeZone: tz });\r\n  const today = useMemo(\r\n    () => new Date().toLocaleDateString(\"en-CA\", { timeZone: tz }),\r\n    []\r\n  );\r\n  const activeSet = useMemo(() => {\r\n    const s = new Set();\r\n    (streak || [])\r\n      .filter((d) => d.isActive)\r\n      .forEach((d) => {\r\n        if (d.date) s.add(toISTDate(d.date));\r\n      });\r\n    return s;\r\n  }, [streak]);\r\n\r\n  const lastNDays = (n) => {\r\n    const out = [];\r\n    const base = new Date(`${today}T00:00:00+05:30`);\r\n    for (let i = n - 1; i >= 0; i--) {\r\n      const dt = new Date(base);\r\n      dt.setDate(base.getDate() - i);\r\n      out.push(dt.toLocaleDateString(\"en-CA\", { timeZone: tz }));\r\n    }\r\n    return out;\r\n  };\r\n\r\n  const days30 = lastNDays(30);\r\n  const active30 = days30.map((d) => (activeSet.has(d) ? 1 : 0));\r\n  const consistency30 = active30.reduce((a, b) => a + b, 0) / 30; // 0..1\r\n\r\n  // Simple “streak momentum”: rolling 7-day average for sparkline\r\n  const spark = useMemo(() => {\r\n    const win = 7;\r\n    const arr = [];\r\n    for (let i = 0; i < active30.length; i++) {\r\n      const start = Math.max(0, i - win + 1);\r\n      const slice = active30.slice(start, i + 1);\r\n      const avg = slice.reduce((a, b) => a + b, 0) / slice.length;\r\n      arr.push(Number((avg * 100).toFixed(0))); // percent for nicer scale\r\n    }\r\n    return arr;\r\n  }, [active30]);\r\n\r\n  // Growth charts from recentSessions\r\n\r\n  const weekdayDistribution = useMemo(() => {\r\n    const days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n    const totals = Array(7).fill(0);\r\n    recentSessions.forEach((s) => {\r\n      const src = s.date || s.startTime;\r\n      if (!src) return;\r\n      const d = new Date(src);\r\n      // Convert to IST weekday\r\n      const dStr = d.toLocaleDateString(\"en-CA\", { timeZone: tz });\r\n      const ist = new Date(dStr + \"T00:00:00+05:30\");\r\n      const wd = ist.getDay(); // 0..6 Sun..Sat\r\n      const idx = (wd + 6) % 7; // 0..6 Mon..Sun\r\n      totals[idx] += Math.round((Number(s.duration) || 0) / 60);\r\n    });\r\n    return { labels: days, values: totals };\r\n  }, [recentSessions]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Profile & Settings</h2>\r\n      <style>{`\r\n        .modal-backdrop{position:fixed;inset:0;background:rgba(0,0,0,.5);display:flex;align-items:center;justify-content:center;z-index:50}\r\n        .modal{background:var(--card-bg, #111827);color:var(--fg, #e5e7eb);padding:16px;border-radius:8px;min-width:320px;max-width:560px;width:100%}\r\n        .badge{background:#e5e7eb;color:#111;border-radius:999px;padding:2px 8px;font-size:12px}\r\n        .primary{background:#6366f1;border-color:#6366f1}\r\n      `}</style>\r\n      <div className=\"card\">\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: 24 }}>\r\n          <div style={{ flex: \"0 0 auto\" }}>\r\n            <ProgressRing\r\n              value={consistency30}\r\n              label={`${Math.round(consistency30 * 100)}% consistency`}\r\n              caption={\"Last 30 days\"}\r\n              color=\"#6366f1\"\r\n            />\r\n          </div>\r\n          <div style={{ flex: 1, minWidth: 280 }}>\r\n            <div style={{ fontWeight: 600, marginBottom: 6 }}>\r\n              7-day momentum\r\n            </div>\r\n            <Sparkline data={spark} width={420} height={80} />\r\n            <div className=\"muted\" style={{ marginTop: 6 }}>\r\n              Daily activity (1 = active, 0 = inactive) smoothed over 7 days.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Competitive Programming Overview only */}\r\n      <div className=\"card\">\r\n        <div className=\"muted\">Self-reported data only. No external APIs.</div>\r\n        <div style={{ marginTop: 12 }}>\r\n          <div className=\"grid-2\" style={{ gap: 12 }}>\r\n            <PlatformCard\r\n              platform=\"LeetCode\"\r\n              link={\r\n                cp.usernames?.leetcode\r\n                  ? `https://leetcode.com/${cp.usernames.leetcode}`\r\n                  : cp.links?.leetcodeUrl || \"#\"\r\n              }\r\n              stats={\r\n                cp.preferences?.showScorecards\r\n                  ? cp.selfReportedStats?.leetcode\r\n                  : null\r\n              }\r\n            />\r\n            <PlatformCard\r\n              platform=\"CodeChef\"\r\n              link={\r\n                cp.usernames?.codechef\r\n                  ? `https://www.codechef.com/users/${cp.usernames.codechef}`\r\n                  : cp.links?.codechefUrl || \"#\"\r\n              }\r\n              stats={\r\n                cp.preferences?.showScorecards\r\n                  ? cp.selfReportedStats?.codechef\r\n                  : null\r\n              }\r\n            />\r\n            <PlatformCard\r\n              platform=\"Codeforces\"\r\n              link={\r\n                cp.usernames?.codeforces\r\n                  ? `https://codeforces.com/profile/${cp.usernames.codeforces}`\r\n                  : cp.links?.codeforcesUrl || \"#\"\r\n              }\r\n              stats={\r\n                cp.preferences?.showScorecards\r\n                  ? cp.selfReportedStats?.codeforces\r\n                  : null\r\n              }\r\n            />\r\n            <PlatformCard\r\n              platform=\"Striver\"\r\n              link={cp.links?.striverSheetUrl || \"#\"}\r\n              stats={null}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* My Links */}\r\n      <div className=\"card\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <h3 style={{ margin: 0 }}>My Links</h3>\r\n          <button className=\"button primary\" onClick={() => setLinksOpen(true)}>\r\n            Edit Links\r\n          </button>\r\n        </div>\r\n        <div style={{ marginTop: 12 }}>\r\n          <LinksGrid\r\n            links={links}\r\n            loading={linksLoading}\r\n            onEdit={() => setLinksOpen(true)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <LinksModal\r\n        open={linksOpen}\r\n        initial={links}\r\n        onClose={() => setLinksOpen(false)}\r\n        onSave={async (vals) => {\r\n          try {\r\n            await axios.put(\"/profile/links\", { links: vals });\r\n            setLinksOpen(false);\r\n            await loadLinks();\r\n            setToast({ open: true, msg: \"Links saved\" });\r\n          } catch {}\r\n        }}\r\n      />\r\n      <Toast\r\n        open={toast.open}\r\n        message={toast.msg}\r\n        onClose={() => setToast({ open: false, msg: \"\" })}\r\n      />\r\n      <div className=\"card\">\r\n        <div>\r\n          <div style={{ fontWeight: 600, marginBottom: 8 }}>\r\n            Weekday distribution\r\n          </div>\r\n          <BarChart\r\n            values={weekdayDistribution.values}\r\n            labels={weekdayDistribution.labels}\r\n            width={720}\r\n            height={160}\r\n            color=\"#f59e0b\"\r\n            showAxis\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"card\">\r\n        <form onSubmit={save} className=\"grid\">\r\n          <input\r\n            placeholder=\"Name\"\r\n            value={form.name}\r\n            onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n          />\r\n          <input\r\n            placeholder=\"Email\"\r\n            value={form.email}\r\n            onChange={(e) => setForm({ ...form, email: e.target.value })}\r\n          />\r\n          <button type=\"submit\">Save</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["Sparkline","_ref","data","width","height","stroke","fill","strokeWidth","path","area","useMemo","length","n","max","Math","min","span","dx","points","map","v","i","_ref2","x","y","concat","join","_ref3","_jsxs","viewBox","children","_jsx","d","strokeLinecap","strokeLinejoin","BarChart","values","labels","barGap","color","showAxis","maxValue","bars","xLabels","barWidth","floor","h","round","bar","w","Array","x1","y1","x2","y2","b","rx","opacity","some","Boolean","style","display","gap","marginTop","l","textAlign","fontSize","brand","LeetCode","bg","fg","CodeChef","Codeforces","Striver","PlatformCard","platform","link","stats","onEditStats","expanded","setExpanded","useState","safeLink","test","className","background","justifyContent","alignItems","margin","gridTemplateColumns","Object","entries","k","fontWeight","lastUpdated","gridColumn","Date","toLocaleString","href","target","rel","onClick","platformMeta","leetcode","name","bg2","cardFg","icon","SiLeetcode","codechef","SiCodechef","codeforces","SiCodeforces","smartinterviews","FaRegLightbulb","striverSheet","linkedin","FaLinkedin","github","FaGithub","discord","FaDiscord","spotify","FaSpotify","eduprime","FaGoogle","youtube","FaYoutube","gmail","SiGmail","atcoder","FaCode","spoj","hackerrank","SiHackerrank","interviewbit","FaBriefcase","keyName","size","radius","ariaLabel","meta","Icon","role","borderRadius","placeItems","order","LinksGrid","links","onEdit","loading","items","filter","from","_","key","url","has","hostname","URL","_unused","cardStyle","_objectSpread","m","getPlatformCardStyle","boxShadow","undefined","tabIndex","flex","PlatformIcon","minWidth","fields","label","LinksModal","open","initial","onClose","onSave","setValues","errors","setErrors","useEffect","onKeyDown","e","maxHeight","overflow","f","placeholder","value","onChange","validate","errs","trim","keys","Toast","message","duration","id","setTimeout","clearTimeout","position","top","right","zIndex","border","padding","maxWidth","ProfilePage","_cp$usernames","_cp$links","_cp$preferences","_cp$selfReportedStats","_cp$usernames2","_cp$links2","_cp$preferences2","_cp$selfReportedStats2","_cp$usernames3","_cp$links3","_cp$preferences3","_cp$selfReportedStats3","_cp$links4","user","useContext","AuthContext","streak","fetchStreak","TimerContext","recentSessions","setRecentSessions","form","setForm","email","cpLoading","setCpLoading","cp","setCp","mode","usernames","preferences","showScorecards","theme","selfReportedStats","setLinks","linksOpen","setLinksOpen","linksLoading","setLinksLoading","toast","setToast","msg","end","start","setDate","getDate","qs","encodeURIComponent","toISOString","axios","get","then","res","catch","async","a","loadCP","loadLinks","tz","today","toLocaleDateString","timeZone","activeSet","s","Set","isActive","forEach","date","add","toISTDate","active30","out","base","dt","push","lastNDays","consistency30","reduce","spark","arr","slice","avg","Number","toFixed","weekdayDistribution","totals","src","startTime","dStr","wd","getDay","flexWrap","ProgressRing","caption","marginBottom","leetcodeUrl","codechefUrl","codeforcesUrl","striverSheetUrl","put","vals","_unused2","onSubmit","preventDefault","alert","type"],"sourceRoot":""}